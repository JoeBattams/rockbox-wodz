# Makefile for puzzles under Mac OS X.
#
# This file was created by `mkfiles.pl' from the `Recipe' file.
# DO NOT EDIT THIS FILE DIRECTLY; edit Recipe or mkfiles.pl instead.
CC = $(TOOLPATH)gcc
LIPO = $(TOOLPATH)lipo

CFLAGS = -O2 -Wall -Werror -g -I./ -Iicons/
LDFLAGS = -framework Cocoa
all: Puzzles fifteensolver fillingsolver galaxiespicture galaxiessolver \
		keensolver latincheck lightupsolver loopysolver \
		magnetssolver mapsolver mineobfusc obfusc patternpicture \
		patternsolver pearlbench signpostsolver singlessolver \
		slantsolver solosolver tentssolver towerssolver \
		unequalsolver unrulysolver
Puzzles_extra = Puzzles.app/Contents/Resources/Help/index.html
Puzzles.app/Contents/Resources/Help/index.html: \
	Puzzles.app/Contents/Resources/Help osx-help.but puzzles.but
	cd Puzzles.app/Contents/Resources/Help; \
		halibut --html ../../../../osx-help.but ../../../../puzzles.but
Puzzles.app/Contents/Resources/Help: Puzzles.app/Contents/Resources
	mkdir -p Puzzles.app/Contents/Resources/Help

release: Puzzles.dmg
Puzzles.dmg: Puzzles
	rm -f raw.dmg
	hdiutil create -megabytes 5 -layout NONE raw.dmg
	hdid -nomount raw.dmg > devicename
	newfs_hfs -v "Simon Tatham's Puzzle Collection" `cat devicename`
	hdiutil eject `cat devicename`
	hdid raw.dmg | cut -f1 -d' ' > devicename
	cp -R Puzzles.app /Volumes/"Simon Tatham's Puzzle Collection"
	hdiutil eject `cat devicename`
	rm -f Puzzles.dmg
	hdiutil convert -format UDCO raw.dmg -o Puzzles.dmg
	rm -f raw.dmg devicename

.SUFFIXES: .o .c .m



Puzzles.app:
	mkdir -p $@
Puzzles.app/Contents: Puzzles.app
	mkdir -p $@
Puzzles.app/Contents/MacOS: Puzzles.app/Contents
	mkdir -p $@
Puzzles.app/Contents/Resources: Puzzles.app/Contents
	mkdir -p $@
Puzzles.app/Contents/Resources/Puzzles.icns: Puzzles.app/Contents/Resources osx.icns
	cp osx.icns $@
Puzzles.app/Contents/Info.plist: Puzzles.app/Contents/Resources osx-info.plist
	cp osx-info.plist $@
Puzzles: Puzzles.app/Contents/MacOS/Puzzles \
		Puzzles.app/Contents/Resources/Puzzles.icns \
		Puzzles.app/Contents/Info.plist $(Puzzles_extra)

Puzzles.i386.bin: blackbo3.i386.o bridges3.i386.o combi.i386.o cube3.i386.o \
		divvy.i386.o dominos3.i386.o drawing.i386.o dsf.i386.o \
		fifteen5.i386.o filling5.i386.o findloop.i386.o flip3.i386.o \
		flood3.i386.o galaxie7.i386.o grid.i386.o guess3.i386.o \
		inertia3.i386.o keen5.i386.o latin.i386.o laydomino.i386.o \
		lightup5.i386.o list.i386.o loopgen.i386.o loopy5.i386.o \
		magnets5.i386.o malloc.i386.o map5.i386.o maxflow.i386.o \
		midend.i386.o mines5.i386.o misc.i386.o net3.i386.o \
		netslid3.i386.o osx.i386.o palisad3.i386.o pattern7.i386.o \
		pearl5.i386.o pegs3.i386.o penrose.i386.o random.i386.o \
		range3.i386.o rect3.i386.o samegam3.i386.o signpos5.i386.o \
		singles5.i386.o sixteen3.i386.o slant5.i386.o solo5.i386.o \
		tdq.i386.o tents5.i386.o towers5.i386.o tracks3.i386.o \
		tree234.i386.o twiddle3.i386.o undead3.i386.o \
		unequal5.i386.o unruly5.i386.o untangl3.i386.o \
		version.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(LDFLAGS) -o $@ \
		blackbo3.i386.o bridges3.i386.o combi.i386.o cube3.i386.o \
		divvy.i386.o dominos3.i386.o drawing.i386.o dsf.i386.o \
		fifteen5.i386.o filling5.i386.o findloop.i386.o flip3.i386.o \
		flood3.i386.o galaxie7.i386.o grid.i386.o guess3.i386.o \
		inertia3.i386.o keen5.i386.o latin.i386.o laydomino.i386.o \
		lightup5.i386.o list.i386.o loopgen.i386.o loopy5.i386.o \
		magnets5.i386.o malloc.i386.o map5.i386.o maxflow.i386.o \
		midend.i386.o mines5.i386.o misc.i386.o net3.i386.o \
		netslid3.i386.o osx.i386.o palisad3.i386.o pattern7.i386.o \
		pearl5.i386.o pegs3.i386.o penrose.i386.o random.i386.o \
		range3.i386.o rect3.i386.o samegam3.i386.o signpos5.i386.o \
		singles5.i386.o sixteen3.i386.o slant5.i386.o solo5.i386.o \
		tdq.i386.o tents5.i386.o towers5.i386.o tracks3.i386.o \
		tree234.i386.o twiddle3.i386.o undead3.i386.o \
		unequal5.i386.o unruly5.i386.o untangl3.i386.o \
		version.i386.o 

Puzzles.app/Contents/MacOS/Puzzles: Puzzles.app/Contents/MacOS \
		Puzzles.i386.bin
	$(LIPO) -create  Puzzles.i386.bin -output $@

fifteensolver.i386: fifteen2.i386.o malloc.i386.o misc.i386.o nullfe.i386.o \
		random.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		fifteen2.i386.o malloc.i386.o misc.i386.o nullfe.i386.o \
		random.i386.o 

fifteensolver: fifteensolver.i386
	$(LIPO) -create  fifteensolver.i386 -output $@

fillingsolver.i386: dsf.i386.o filling2.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o filling2.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o 

fillingsolver: fillingsolver.i386
	$(LIPO) -create  fillingsolver.i386 -output $@

galaxiespicture.i386: dsf.i386.o galaxie4.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o galaxie4.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o -lm

galaxiespicture: galaxiespicture.i386
	$(LIPO) -create  galaxiespicture.i386 -output $@

galaxiessolver.i386: dsf.i386.o galaxie2.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o galaxie2.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o -lm

galaxiessolver: galaxiessolver.i386
	$(LIPO) -create  galaxiessolver.i386 -output $@

keensolver.i386: dsf.i386.o keen2.i386.o latin6.i386.o malloc.i386.o \
		maxflow.i386.o misc.i386.o nullfe.i386.o random.i386.o \
		tree234.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o keen2.i386.o latin6.i386.o malloc.i386.o \
		maxflow.i386.o misc.i386.o nullfe.i386.o random.i386.o \
		tree234.i386.o 

keensolver: keensolver.i386
	$(LIPO) -create  keensolver.i386 -output $@

latincheck.i386: latin8.i386.o malloc.i386.o maxflow.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o tree234.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		latin8.i386.o malloc.i386.o maxflow.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o tree234.i386.o 

latincheck: latincheck.i386
	$(LIPO) -create  latincheck.i386 -output $@

lightupsolver.i386: combi.i386.o lightup2.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		combi.i386.o lightup2.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o 

lightupsolver: lightupsolver.i386
	$(LIPO) -create  lightupsolver.i386 -output $@

loopysolver.i386: dsf.i386.o grid.i386.o loopgen.i386.o loopy2.i386.o \
		malloc.i386.o misc.i386.o nullfe.i386.o penrose.i386.o \
		random.i386.o tree234.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o grid.i386.o loopgen.i386.o loopy2.i386.o \
		malloc.i386.o misc.i386.o nullfe.i386.o penrose.i386.o \
		random.i386.o tree234.i386.o -lm

loopysolver: loopysolver.i386
	$(LIPO) -create  loopysolver.i386 -output $@

magnetssolver.i386: laydomino.i386.o magnets2.i386.o malloc.i386.o \
		misc.i386.o nullfe.i386.o random.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		laydomino.i386.o magnets2.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o -lm

magnetssolver: magnetssolver.i386
	$(LIPO) -create  magnetssolver.i386 -output $@

mapsolver.i386: dsf.i386.o malloc.i386.o map2.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o malloc.i386.o map2.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o -lm

mapsolver: mapsolver.i386
	$(LIPO) -create  mapsolver.i386 -output $@

mineobfusc.i386: malloc.i386.o mines2.i386.o misc.i386.o nullfe.i386.o \
		random.i386.o tree234.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		malloc.i386.o mines2.i386.o misc.i386.o nullfe.i386.o \
		random.i386.o tree234.i386.o 

mineobfusc: mineobfusc.i386
	$(LIPO) -create  mineobfusc.i386 -output $@

obfusc.i386: malloc.i386.o misc.i386.o nullfe.i386.o obfusc.i386.o \
		random.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		malloc.i386.o misc.i386.o nullfe.i386.o obfusc.i386.o \
		random.i386.o 

obfusc: obfusc.i386
	$(LIPO) -create  obfusc.i386 -output $@

patternpicture.i386: malloc.i386.o misc.i386.o nullfe.i386.o pattern4.i386.o \
		random.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		malloc.i386.o misc.i386.o nullfe.i386.o pattern4.i386.o \
		random.i386.o 

patternpicture: patternpicture.i386
	$(LIPO) -create  patternpicture.i386 -output $@

patternsolver.i386: malloc.i386.o misc.i386.o nullfe.i386.o pattern2.i386.o \
		random.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		malloc.i386.o misc.i386.o nullfe.i386.o pattern2.i386.o \
		random.i386.o 

patternsolver: patternsolver.i386
	$(LIPO) -create  patternsolver.i386 -output $@

pearlbench.i386: dsf.i386.o grid.i386.o loopgen.i386.o malloc.i386.o \
		misc.i386.o nullfe.i386.o pearl2.i386.o penrose.i386.o \
		random.i386.o tdq.i386.o tree234.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o grid.i386.o loopgen.i386.o malloc.i386.o \
		misc.i386.o nullfe.i386.o pearl2.i386.o penrose.i386.o \
		random.i386.o tdq.i386.o tree234.i386.o -lm

pearlbench: pearlbench.i386
	$(LIPO) -create  pearlbench.i386 -output $@

signpostsolver.i386: dsf.i386.o malloc.i386.o misc.i386.o nullfe.i386.o \
		random.i386.o signpos2.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o malloc.i386.o misc.i386.o nullfe.i386.o \
		random.i386.o signpos2.i386.o -lm

signpostsolver: signpostsolver.i386
	$(LIPO) -create  signpostsolver.i386 -output $@

singlessolver.i386: dsf.i386.o latin.i386.o malloc.i386.o maxflow.i386.o \
		misc.i386.o nullfe.i386.o random.i386.o singles3.i386.o \
		tree234.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o latin.i386.o malloc.i386.o maxflow.i386.o \
		misc.i386.o nullfe.i386.o random.i386.o singles3.i386.o \
		tree234.i386.o 

singlessolver: singlessolver.i386
	$(LIPO) -create  singlessolver.i386 -output $@

slantsolver.i386: dsf.i386.o findloop.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o slant2.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o findloop.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o slant2.i386.o 

slantsolver: slantsolver.i386
	$(LIPO) -create  slantsolver.i386 -output $@

solosolver.i386: divvy.i386.o dsf.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o solo2.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		divvy.i386.o dsf.i386.o malloc.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o solo2.i386.o 

solosolver: solosolver.i386
	$(LIPO) -create  solosolver.i386 -output $@

tentssolver.i386: dsf.i386.o malloc.i386.o maxflow.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o tents3.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		dsf.i386.o malloc.i386.o maxflow.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o tents3.i386.o 

tentssolver: tentssolver.i386
	$(LIPO) -create  tentssolver.i386 -output $@

towerssolver.i386: latin6.i386.o malloc.i386.o maxflow.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o towers2.i386.o tree234.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		latin6.i386.o malloc.i386.o maxflow.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o towers2.i386.o tree234.i386.o 

towerssolver: towerssolver.i386
	$(LIPO) -create  towerssolver.i386 -output $@

unequalsolver.i386: latin6.i386.o malloc.i386.o maxflow.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o tree234.i386.o unequal2.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		latin6.i386.o malloc.i386.o maxflow.i386.o misc.i386.o \
		nullfe.i386.o random.i386.o tree234.i386.o unequal2.i386.o 

unequalsolver: unequalsolver.i386
	$(LIPO) -create  unequalsolver.i386 -output $@

unrulysolver.i386: malloc.i386.o misc.i386.o nullfe.i386.o random.i386.o \
		unruly2.i386.o
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(ULDFLAGS) -o $@ \
		malloc.i386.o misc.i386.o nullfe.i386.o random.i386.o \
		unruly2.i386.o 

unrulysolver: unrulysolver.i386
	$(LIPO) -create  unrulysolver.i386 -output $@

blackbox.i386.o: ./blackbox.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
blackbo3.i386.o: ./blackbox.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
bridges.i386.o: ./bridges.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
bridges3.i386.o: ./bridges.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
combi.i386.o: ./combi.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
cube.i386.o: ./cube.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
cube3.i386.o: ./cube.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
divvy.i386.o: ./divvy.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
dominosa.i386.o: ./dominosa.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
dominos3.i386.o: ./dominosa.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
drawing.i386.o: ./drawing.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
dsf.i386.o: ./dsf.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
fifteen.i386.o: ./fifteen.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
fifteen5.i386.o: ./fifteen.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
fifteen2.i386.o: ./fifteen.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
filling.i386.o: ./filling.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
filling5.i386.o: ./filling.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
filling2.i386.o: ./filling.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
findloop.i386.o: ./findloop.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
flip.i386.o: ./flip.c ./puzzles.h ./tree234.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
flip3.i386.o: ./flip.c ./puzzles.h ./tree234.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
flood.i386.o: ./flood.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
flood3.i386.o: ./flood.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
galaxies.i386.o: ./galaxies.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
galaxie7.i386.o: ./galaxies.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
galaxie4.i386.o: ./galaxies.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_PICTURE_GENERATOR -c $< -o $@
galaxie2.i386.o: ./galaxies.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
grid.i386.o: ./grid.c ./puzzles.h ./tree234.h ./grid.h ./penrose.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
gtk.i386.o: ./gtk.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
guess.i386.o: ./guess.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
guess3.i386.o: ./guess.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
inertia.i386.o: ./inertia.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
inertia3.i386.o: ./inertia.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
keen.i386.o: ./keen.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
keen5.i386.o: ./keen.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
keen2.i386.o: ./keen.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
latin.i386.o: ./latin.c ./puzzles.h ./tree234.h ./maxflow.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
latin8.i386.o: ./latin.c ./puzzles.h ./tree234.h ./maxflow.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_LATIN_TEST -c $< -o $@
latin6.i386.o: ./latin.c ./puzzles.h ./tree234.h ./maxflow.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
laydomino.i386.o: ./laydomino.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
lightup.i386.o: ./lightup.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
lightup5.i386.o: ./lightup.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
lightup2.i386.o: ./lightup.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
list.i386.o: ./list.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
loopgen.i386.o: ./loopgen.c ./puzzles.h ./tree234.h ./grid.h ./loopgen.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
loopy.i386.o: ./loopy.c ./puzzles.h ./tree234.h ./grid.h ./loopgen.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
loopy5.i386.o: ./loopy.c ./puzzles.h ./tree234.h ./grid.h ./loopgen.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
loopy2.i386.o: ./loopy.c ./puzzles.h ./tree234.h ./grid.h ./loopgen.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
magnets.i386.o: ./magnets.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
magnets5.i386.o: ./magnets.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
magnets2.i386.o: ./magnets.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
malloc.i386.o: ./malloc.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
map.i386.o: ./map.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
map5.i386.o: ./map.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
map2.i386.o: ./map.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
maxflow.i386.o: ./maxflow.c ./maxflow.h ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
midend.i386.o: ./midend.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
mines.i386.o: ./mines.c ./tree234.h ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
mines5.i386.o: ./mines.c ./tree234.h ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
mines2.i386.o: ./mines.c ./tree234.h ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_OBFUSCATOR -c $< -o $@
misc.i386.o: ./misc.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
net.i386.o: ./net.c ./puzzles.h ./tree234.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
net3.i386.o: ./net.c ./puzzles.h ./tree234.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
netslide.i386.o: ./netslide.c ./puzzles.h ./tree234.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
netslid3.i386.o: ./netslide.c ./puzzles.h ./tree234.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
no-icon.i386.o: ./no-icon.c
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
nullfe.i386.o: ./nullfe.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
nullgame.i386.o: ./nullgame.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
obfusc.i386.o: ./obfusc.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
osx.i386.o: ./osx.m ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 -x objective-c $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
palisade.i386.o: ./palisade.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
palisad3.i386.o: ./palisade.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
pattern.i386.o: ./pattern.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
pattern7.i386.o: ./pattern.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
pattern4.i386.o: ./pattern.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_PICTURE_GENERATOR -c $< -o $@
pattern2.i386.o: ./pattern.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
pearl.i386.o: ./pearl.c ./puzzles.h ./grid.h ./loopgen.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
pearl5.i386.o: ./pearl.c ./puzzles.h ./grid.h ./loopgen.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
pearl2.i386.o: ./pearl.c ./puzzles.h ./grid.h ./loopgen.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
pegs.i386.o: ./pegs.c ./puzzles.h ./tree234.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
pegs3.i386.o: ./pegs.c ./puzzles.h ./tree234.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
penrose.i386.o: ./penrose.c ./puzzles.h ./penrose.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
printing.i386.o: ./printing.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
ps.i386.o: ./ps.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
random.i386.o: ./random.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
range.i386.o: ./range.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
range3.i386.o: ./range.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
rect.i386.o: ./rect.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
rect3.i386.o: ./rect.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
samegame.i386.o: ./samegame.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
samegam3.i386.o: ./samegame.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
signpost.i386.o: ./signpost.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
signpos5.i386.o: ./signpost.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
signpos2.i386.o: ./signpost.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
singles.i386.o: ./singles.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
singles5.i386.o: ./singles.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
singles3.i386.o: ./singles.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
sixteen.i386.o: ./sixteen.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
sixteen3.i386.o: ./sixteen.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
slant.i386.o: ./slant.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
slant5.i386.o: ./slant.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
slant2.i386.o: ./slant.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
solo.i386.o: ./solo.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
solo5.i386.o: ./solo.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
solo2.i386.o: ./solo.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
tdq.i386.o: ./tdq.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
tents.i386.o: ./tents.c ./puzzles.h ./maxflow.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
tents5.i386.o: ./tents.c ./puzzles.h ./maxflow.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
tents3.i386.o: ./tents.c ./puzzles.h ./maxflow.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
towers.i386.o: ./towers.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
towers5.i386.o: ./towers.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
towers2.i386.o: ./towers.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
tracks.i386.o: ./tracks.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
tracks3.i386.o: ./tracks.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
tree234.i386.o: ./tree234.c ./tree234.h ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
twiddle.i386.o: ./twiddle.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
twiddle3.i386.o: ./twiddle.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
undead.i386.o: ./undead.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
undead3.i386.o: ./undead.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
unequal.i386.o: ./unequal.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
unequal5.i386.o: ./unequal.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
unequal2.i386.o: ./unequal.c ./puzzles.h ./latin.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
unruly.i386.o: ./unruly.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
unruly5.i386.o: ./unruly.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
unruly2.i386.o: ./unruly.c ./puzzles.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DSTANDALONE_SOLVER -c $< -o $@
untangle.i386.o: ./untangle.c ./puzzles.h ./tree234.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
untangl3.i386.o: ./untangle.c ./puzzles.h ./tree234.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@
version.i386.o: ./version.c ./version.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
windows.i386.o: ./windows.c ./puzzles.h ./resource.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -c $< -o $@
windows1.i386.o: ./windows.c ./puzzles.h ./resource.h
	$(CC) -arch i386 -mmacosx-version-min=10.4 $(COMPAT) $(FWHACK) $(CFLAGS) $(XFLAGS) -DCOMBINED -c $< -o $@

clean:
	rm -f *.o *.dmg fifteensolver fifteensolver.i386 fillingsolver fillingsolver.i386 galaxiespicture galaxiespicture.i386 galaxiessolver galaxiessolver.i386 keensolver keensolver.i386 latincheck latincheck.i386 lightupsolver lightupsolver.i386 loopysolver loopysolver.i386 magnetssolver magnetssolver.i386 mapsolver mapsolver.i386 mineobfusc mineobfusc.i386 obfusc obfusc.i386 patternpicture patternpicture.i386 patternsolver patternsolver.i386 pearlbench pearlbench.i386 signpostsolver signpostsolver.i386 singlessolver singlessolver.i386 slantsolver slantsolver.i386 solosolver solosolver.i386 tentssolver tentssolver.i386 towerssolver towerssolver.i386 unequalsolver unequalsolver.i386 unrulysolver unrulysolver.i386
	rm -rf *.app
