/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 2.1.8
 * XML versions: atj213x:
 *
 * Copyright (C) 2015 by Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN__ATJ213X__YUV2RGB__H__
#define __HEADERGEN__ATJ213X__YUV2RGB__H__
#include "regs-macro.h"

#define REGS_YUV2RGB_BASE (0xb00f0000)

#define REGS_YUV2RGB_VERSION ""

/**
 * Register: YUV2RGB_CTL
 * Address: 0
 * SCT: no
 */
#define YUV2RGB_CTL                         (*(volatile unsigned long *)(REGS_YUV2RGB_BASE + 0x0))
#define BP_YUV2RGB_CTL_RESERVED             22
#define BM_YUV2RGB_CTL_RESERVED             0xffc00000
#define BF_YUV2RGB_CTL_RESERVED(v)          (((v) << 22) & 0xffc00000)
/* Field: RFBM
 * Description: Read fifo block mode. */
#define BP_YUV2RGB_CTL_RFBM                 21
#define BM_YUV2RGB_CTL_RFBM                 0x200000
#define BF_YUV2RGB_CTL_RFBM(v)              (((v) << 21) & 0x200000)
/* Field: WFBM
 * Description: Write fifo block mode */
#define BP_YUV2RGB_CTL_WFBM                 20
#define BM_YUV2RGB_CTL_WFBM                 0x100000
#define BF_YUV2RGB_CTL_WFBM(v)              (((v) << 20) & 0x100000)
/* Field: EN
 * Description: RGB Decoder enable. */
#define BP_YUV2RGB_CTL_EN                   19
#define BM_YUV2RGB_CTL_EN                   0x80000
#define BF_YUV2RGB_CTL_EN(v)                (((v) << 19) & 0x80000)
/* Field: FES
 * Description: Fifo empty status. */
#define BP_YUV2RGB_CTL_FES                  18
#define BM_YUV2RGB_CTL_FES                  0x40000
#define BF_YUV2RGB_CTL_FES(v)               (((v) << 18) & 0x40000)
/* Field: WDCS
 * Description: Write Data/Command Select */
#define BP_YUV2RGB_CTL_WDCS                 16
#define BM_YUV2RGB_CTL_WDCS                 0x30000
#define BV_YUV2RGB_CTL_WDCS__CMD            0x0
#define BV_YUV2RGB_CTL_WDCS__DATA           0x1
#define BV_YUV2RGB_CTL_WDCS__RGB            0x2
#define BV_YUV2RGB_CTL_WDCS__YUV            0x3
#define BF_YUV2RGB_CTL_WDCS(v)              (((v) << 16) & 0x30000)
#define BF_YUV2RGB_CTL_WDCS_V(v)            ((BV_YUV2RGB_CTL_WDCS__##v << 16) & 0x30000)
/* Field: DEST
 * Description: RGB Decoder Destination. */
#define BP_YUV2RGB_CTL_DEST                 15
#define BM_YUV2RGB_CTL_DEST                 0x8000
#define BF_YUV2RGB_CTL_DEST(v)              (((v) << 15) & 0x8000)
/* Field: FORMATS
 * Description: RGB Format */
#define BP_YUV2RGB_CTL_FORMATS              11
#define BM_YUV2RGB_CTL_FORMATS              0x3800
#define BV_YUV2RGB_CTL_FORMATS__RGB565_1    0x0
#define BV_YUV2RGB_CTL_FORMATS__RGB666_1    0x1
#define BV_YUV2RGB_CTL_FORMATS__RGB565_2    0x2
#define BV_YUV2RGB_CTL_FORMATS__RGB666_2    0x3
#define BV_YUV2RGB_CTL_FORMATS__RGB888_3    0x4
#define BV_YUV2RGB_CTL_FORMATS__RGB666_3    0x5
#define BF_YUV2RGB_CTL_FORMATS(v)           (((v) << 11) & 0x3800)
#define BF_YUV2RGB_CTL_FORMATS_V(v)         ((BV_YUV2RGB_CTL_FORMATS__##v << 11) & 0x3800)
/* Field: SEQ
 * Description: RGB Sequence */
#define BP_YUV2RGB_CTL_SEQ                  10
#define BM_YUV2RGB_CTL_SEQ                  0x400
#define BV_YUV2RGB_CTL_SEQ__RGB             0x0
#define BV_YUV2RGB_CTL_SEQ__BGR             0x1
#define BF_YUV2RGB_CTL_SEQ(v)               (((v) << 10) & 0x400)
#define BF_YUV2RGB_CTL_SEQ_V(v)             ((BV_YUV2RGB_CTL_SEQ__##v << 10) & 0x400)
/* Field: FWCS
 * Description: FIFO write channel select. */
#define BP_YUV2RGB_CTL_FWCS                 9
#define BM_YUV2RGB_CTL_FWCS                 0x200
#define BV_YUV2RGB_CTL_FWCS__SPECIAL        0x0
#define BV_YUV2RGB_CTL_FWCS__AHB            0x1
#define BF_YUV2RGB_CTL_FWCS(v)              (((v) << 9) & 0x200)
#define BF_YUV2RGB_CTL_FWCS_V(v)            ((BV_YUV2RGB_CTL_FWCS__##v << 9) & 0x200)
/* Field: FRCS
 * Description: FIFO read channel select */
#define BP_YUV2RGB_CTL_FRCS                 8
#define BM_YUV2RGB_CTL_FRCS                 0x100
#define BV_YUV2RGB_CTL_FRCS__SPECIAL        0x0
#define BV_YUV2RGB_CTL_FRCS__AHB            0x1
#define BF_YUV2RGB_CTL_FRCS(v)              (((v) << 8) & 0x100)
#define BF_YUV2RGB_CTL_FRCS_V(v)            ((BV_YUV2RGB_CTL_FRCS__##v << 8) & 0x100)
/* Field: EMDE
 * Description: FIFO Empty (Write) DRQ Enable. */
#define BP_YUV2RGB_CTL_EMDE                 7
#define BM_YUV2RGB_CTL_EMDE                 0x80
#define BF_YUV2RGB_CTL_EMDE(v)              (((v) << 7) & 0x80)
/* Field: EMIE
 * Description: FIFO Empty (Write) IRQ Enable. */
#define BP_YUV2RGB_CTL_EMIE                 6
#define BM_YUV2RGB_CTL_EMIE                 0x40
#define BF_YUV2RGB_CTL_EMIE(v)              (((v) << 6) & 0x40)
/* Field: FUDE
 * Description: FIFO Full (Read) DRQ Enable. */
#define BP_YUV2RGB_CTL_FUDE                 5
#define BM_YUV2RGB_CTL_FUDE                 0x20
#define BF_YUV2RGB_CTL_FUDE(v)              (((v) << 5) & 0x20)
/* Field: FUIE
 * Description: FIFO Full (Read) IRQ Enable. */
#define BP_YUV2RGB_CTL_FUIE                 4
#define BM_YUV2RGB_CTL_FUIE                 0x10
#define BF_YUV2RGB_CTL_FUIE(v)              (((v) << 4) & 0x10)
/* Field: EMCO
 * Description: FIFO Empty (Write) Condition. */
#define BP_YUV2RGB_CTL_EMCO                 3
#define BM_YUV2RGB_CTL_EMCO                 0x8
#define BV_YUV2RGB_CTL_EMCO__EMPTY_4_8      0x0
#define BV_YUV2RGB_CTL_EMCO__EMPTY_0_8      0x1
#define BF_YUV2RGB_CTL_EMCO(v)              (((v) << 3) & 0x8)
#define BF_YUV2RGB_CTL_EMCO_V(v)            ((BV_YUV2RGB_CTL_EMCO__##v << 3) & 0x8)
/* Field: EMIP
 * Description: FIFO Empty (Write) IRQ Pending Bit. */
#define BP_YUV2RGB_CTL_EMIP                 2
#define BM_YUV2RGB_CTL_EMIP                 0x4
#define BF_YUV2RGB_CTL_EMIP(v)              (((v) << 2) & 0x4)
/* Field: FUIP
 * Description: FIFO Full (Read) IRQ Pending Bit. */
#define BP_YUV2RGB_CTL_FUIP                 1
#define BM_YUV2RGB_CTL_FUIP                 0x2
#define BF_YUV2RGB_CTL_FUIP(v)              (((v) << 1) & 0x2)
/* Field: ERP
 * Description: FIFO Error Pending Bit.  Write 1 to the bit to clear it and 
 * reset the FIFO. */
#define BP_YUV2RGB_CTL_ERP                  0
#define BM_YUV2RGB_CTL_ERP                  0x1
#define BF_YUV2RGB_CTL_ERP(v)               (((v) << 0) & 0x1)

/**
 * Register: YUV2RGB_FIFODATA
 * Address: 0x4
 * SCT: no
 */
#define YUV2RGB_FIFODATA    (*(volatile unsigned long *)(REGS_YUV2RGB_BASE + 0x4))

/**
 * Register: YUV2RGB_CLKCTL
 * Address: 0x8
 * SCT: no
 */
#define YUV2RGB_CLKCTL  (*(volatile unsigned long *)(REGS_YUV2RGB_BASE + 0x8))

/**
 * Register: YUV2RGB_FRAMECOUNT
 * Address: 0xc
 * SCT: no
 */
#define YUV2RGB_FRAMECOUNT  (*(volatile unsigned long *)(REGS_YUV2RGB_BASE + 0xc))

#endif /* __HEADERGEN__ATJ213X__YUV2RGB__H__ */
