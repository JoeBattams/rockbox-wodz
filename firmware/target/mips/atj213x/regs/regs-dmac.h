/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 2.1.8
 * XML versions: atj213x:
 *
 * Copyright (C) 2015 by Marcin Bukat
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN__ATJ213X__DMAC__H__
#define __HEADERGEN__ATJ213X__DMAC__H__
#include "regs-macro.h"

#define REGS_DMAC_BASE (0xb0060000)

#define REGS_DMAC_VERSION ""

/**
 * Register: DMAC_CTL
 * Address: 0
 * SCT: no
 */
#define DMAC_CTL    (*(volatile unsigned long *)(REGS_DMAC_BASE + 0x0))

/**
 * Register: DMAC_IRQEN
 * Address: 0x4
 * SCT: no
 */
#define DMAC_IRQEN  (*(volatile unsigned long *)(REGS_DMAC_BASE + 0x4))

/**
 * Register: DMAC_IRQPD
 * Address: 0x8
 * SCT: no
 */
#define DMAC_IRQPD  (*(volatile unsigned long *)(REGS_DMAC_BASE + 0x8))

/**
 * Register: DMAC_DMA_MODE
 * Address: 0x100+0x20*n
 * SCT: no
 */
#define DMAC_DMA_MODE(n)                    (*(volatile unsigned long *)(REGS_DMAC_BASE + 0x100+0x20*(n)))
/* Field: DBURLEN
 * Description: Destination burst length. If burst lenght is 4 or 8 DDIR must be
 *  0, DFXA must be 0, DDSP must be 0, DCOL must be 0. Burst must not cross a 
 * 1kB address boundary. */
#define BP_DMAC_DMA_MODE_DBURLEN            29
#define BM_DMAC_DMA_MODE_DBURLEN            0xe0000000
#define BV_DMAC_DMA_MODE_DBURLEN__SINGLE    0x0
#define BV_DMAC_DMA_MODE_DBURLEN__INCR4     0x3
#define BV_DMAC_DMA_MODE_DBURLEN__INCR8     0x5
#define BF_DMAC_DMA_MODE_DBURLEN(v)         (((v) << 29) & 0xe0000000)
#define BF_DMAC_DMA_MODE_DBURLEN_V(v)       ((BV_DMAC_DMA_MODE_DBURLEN__##v << 29) & 0xe0000000)
/* Field: RELO
 * Description: DMA Reload Bit. */
#define BP_DMAC_DMA_MODE_RELO               28
#define BM_DMAC_DMA_MODE_RELO               0x10000000
#define BF_DMAC_DMA_MODE_RELO(v)            (((v) << 28) & 0x10000000)
/* Field: DDSP
 * Description: Destination DSP mode. */
#define BP_DMAC_DMA_MODE_DDSP               27
#define BM_DMAC_DMA_MODE_DDSP               0x8000000
#define BF_DMAC_DMA_MODE_DDSP(v)            (((v) << 27) & 0x8000000)
/* Field: DCOL
 * Description: Destination Column Mode. */
#define BP_DMAC_DMA_MODE_DCOL               26
#define BM_DMAC_DMA_MODE_DCOL               0x4000000
#define BF_DMAC_DMA_MODE_DCOL(v)            (((v) << 26) & 0x4000000)
/* Field: DDIR
 * Description: Destination address direction. If DBURLEN is INCR4 or INCR8 only
 *  INCREASE is allowed. */
#define BP_DMAC_DMA_MODE_DDIR               25
#define BM_DMAC_DMA_MODE_DDIR               0x2000000
#define BV_DMAC_DMA_MODE_DDIR__INCREASE     0x0
#define BV_DMAC_DMA_MODE_DDIR__DECREASE     0x1
#define BF_DMAC_DMA_MODE_DDIR(v)            (((v) << 25) & 0x2000000)
#define BF_DMAC_DMA_MODE_DDIR_V(v)          ((BV_DMAC_DMA_MODE_DDIR__##v << 25) & 0x2000000)
/* Field: DFXA
 * Description: Destination Fixed Address bit. */
#define BP_DMAC_DMA_MODE_DFXA               24
#define BM_DMAC_DMA_MODE_DFXA               0x1000000
#define BV_DMAC_DMA_MODE_DFXA__NOT_FIXED    0x0
#define BV_DMAC_DMA_MODE_DFXA__FIXED        0x1
#define BF_DMAC_DMA_MODE_DFXA(v)            (((v) << 24) & 0x1000000)
#define BF_DMAC_DMA_MODE_DFXA_V(v)          ((BV_DMAC_DMA_MODE_DFXA__##v << 24) & 0x1000000)
/* Field: DTRG
 * Description: Destination DRQ Trig Source. */
#define BP_DMAC_DMA_MODE_DTRG               19
#define BM_DMAC_DMA_MODE_DTRG               0xf80000
#define BV_DMAC_DMA_MODE_DTRG__DAC          0x6
#define BV_DMAC_DMA_MODE_DTRG__SDRAM        0x10
#define BV_DMAC_DMA_MODE_DTRG__IRAM         0x11
#define BV_DMAC_DMA_MODE_DTRG__SD           0x16
#define BV_DMAC_DMA_MODE_DTRG__OTG          0x17
#define BV_DMAC_DMA_MODE_DTRG__LCM          0x18
#define BF_DMAC_DMA_MODE_DTRG(v)            (((v) << 19) & 0xf80000)
#define BF_DMAC_DMA_MODE_DTRG_V(v)          ((BV_DMAC_DMA_MODE_DTRG__##v << 19) & 0xf80000)
#define BP_DMAC_DMA_MODE_DTRANWID           17
#define BM_DMAC_DMA_MODE_DTRANWID           0x60000
#define BV_DMAC_DMA_MODE_DTRANWID__WIDTH8   0x0
#define BV_DMAC_DMA_MODE_DTRANWID__WIDTH16  0x1
#define BV_DMAC_DMA_MODE_DTRANWID__WIDTH32  0x2
#define BF_DMAC_DMA_MODE_DTRANWID(v)        (((v) << 17) & 0x60000)
#define BF_DMAC_DMA_MODE_DTRANWID_V(v)      ((BV_DMAC_DMA_MODE_DTRANWID__##v << 17) & 0x60000)
/* Field: DFXS
 * Description: If DFXS=0, DMA will transfer in 8bit mode when remain counter is
 *  less than DTRANWID. If DFXS=1, DMA will always transfer in DTRANWID.  */
#define BP_DMAC_DMA_MODE_DFXS               16
#define BM_DMAC_DMA_MODE_DFXS               0x10000
#define BF_DMAC_DMA_MODE_DFXS(v)            (((v) << 16) & 0x10000)
/* Field: SBURLEN
 * Description: Source burst length. If burst lenght is 4 or 8 DDIR must be 0, 
 * DFXA must be 0, DDSP must be 0, DCOL must be 0. Burst must not cross a 1kB 
 * address boundary. */
#define BP_DMAC_DMA_MODE_SBURLEN            13
#define BM_DMAC_DMA_MODE_SBURLEN            0xe000
#define BV_DMAC_DMA_MODE_SBURLEN__SINGLE    0x0
#define BV_DMAC_DMA_MODE_SBURLEN__INCR4     0x3
#define BV_DMAC_DMA_MODE_SBURLEN__INCR8     0x5
#define BF_DMAC_DMA_MODE_SBURLEN(v)         (((v) << 13) & 0xe000)
#define BF_DMAC_DMA_MODE_SBURLEN_V(v)       ((BV_DMAC_DMA_MODE_SBURLEN__##v << 13) & 0xe000)
/* Field: SDSP
 * Description: Source DSP mode.  */
#define BP_DMAC_DMA_MODE_SDSP               11
#define BM_DMAC_DMA_MODE_SDSP               0x800
#define BF_DMAC_DMA_MODE_SDSP(v)            (((v) << 11) & 0x800)
/* Field: SCOL
 * Description: Source Column Mode. */
#define BP_DMAC_DMA_MODE_SCOL               10
#define BM_DMAC_DMA_MODE_SCOL               0x400
#define BF_DMAC_DMA_MODE_SCOL(v)            (((v) << 10) & 0x400)
/* Field: SDIR
 * Description: Source address direction. If SBURLEN is INCR4 or INCR8 only 
 * INCREASE is allowed. */
#define BP_DMAC_DMA_MODE_SDIR               9
#define BM_DMAC_DMA_MODE_SDIR               0x200
#define BV_DMAC_DMA_MODE_SDIR__INCREASE     0x0
#define BV_DMAC_DMA_MODE_SDIR__DECREASE     0x1
#define BF_DMAC_DMA_MODE_SDIR(v)            (((v) << 9) & 0x200)
#define BF_DMAC_DMA_MODE_SDIR_V(v)          ((BV_DMAC_DMA_MODE_SDIR__##v << 9) & 0x200)
/* Field: SFXA
 * Description: Source Fixed Addres bit. */
#define BP_DMAC_DMA_MODE_SFXA               8
#define BM_DMAC_DMA_MODE_SFXA               0x100
#define BV_DMAC_DMA_MODE_SFXA__NOT_FIXED    0x0
#define BV_DMAC_DMA_MODE_SFXA__FIXED        0x1
#define BF_DMAC_DMA_MODE_SFXA(v)            (((v) << 8) & 0x100)
#define BF_DMAC_DMA_MODE_SFXA_V(v)          ((BV_DMAC_DMA_MODE_SFXA__##v << 8) & 0x100)
/* Field: STRG
 * Description: DRQ trig source. */
#define BP_DMAC_DMA_MODE_STRG               3
#define BM_DMAC_DMA_MODE_STRG               0xf8
#define BV_DMAC_DMA_MODE_STRG__DAC          0x6
#define BV_DMAC_DMA_MODE_STRG__SDRAM        0x10
#define BV_DMAC_DMA_MODE_STRG__IRAM         0x11
#define BV_DMAC_DMA_MODE_STRG__SD           0x16
#define BV_DMAC_DMA_MODE_STRG__OTG          0x17
#define BV_DMAC_DMA_MODE_STRG__LCM          0x18
#define BF_DMAC_DMA_MODE_STRG(v)            (((v) << 3) & 0xf8)
#define BF_DMAC_DMA_MODE_STRG_V(v)          ((BV_DMAC_DMA_MODE_STRG__##v << 3) & 0xf8)
#define BP_DMAC_DMA_MODE_STRANWID           1
#define BM_DMAC_DMA_MODE_STRANWID           0x6
#define BV_DMAC_DMA_MODE_STRANWID__WIDTH8   0x0
#define BV_DMAC_DMA_MODE_STRANWID__WIDTH16  0x1
#define BV_DMAC_DMA_MODE_STRANWID__WIDTH32  0x2
#define BF_DMAC_DMA_MODE_STRANWID(v)        (((v) << 1) & 0x6)
#define BF_DMAC_DMA_MODE_STRANWID_V(v)      ((BV_DMAC_DMA_MODE_STRANWID__##v << 1) & 0x6)
/* Field: SFXS
 * Description: Source Fix Size. If DFXS=0, DMA will transfer in 8bit mode when 
 * remain counter is less than STRANWID. If SFXS=1, DMA will always transfer in 
 * STRANWID. */
#define BP_DMAC_DMA_MODE_SFXS               0
#define BM_DMAC_DMA_MODE_SFXS               0x1
#define BF_DMAC_DMA_MODE_SFXS(v)            (((v) << 0) & 0x1)

/**
 * Register: DMAC_DMA_SRC
 * Address: 0x104+0x20*n
 * SCT: no
 */
#define DMAC_DMA_SRC(n) (*(volatile unsigned long *)(REGS_DMAC_BASE + 0x104+0x20*(n)))

/**
 * Register: DMAC_DMA_DST
 * Address: 0x108+0x20*n
 * SCT: no
 */
#define DMAC_DMA_DST(n) (*(volatile unsigned long *)(REGS_DMAC_BASE + 0x108+0x20*(n)))

/**
 * Register: DMAC_DMA_CNT
 * Address: 0x10c+0x20*n
 * SCT: no
 */
#define DMAC_DMA_CNT(n) (*(volatile unsigned long *)(REGS_DMAC_BASE + 0x10c+0x20*(n)))

/**
 * Register: DMAC_DMA_REM
 * Address: 0x110+0x20*n
 * SCT: no
 */
#define DMAC_DMA_REM(n) (*(volatile unsigned long *)(REGS_DMAC_BASE + 0x110+0x20*(n)))

/**
 * Register: DMAC_DMA_CMD
 * Address: 0x114+0x20*n
 * SCT: no
 */
#define DMAC_DMA_CMD(n) (*(volatile unsigned long *)(REGS_DMAC_BASE + 0x114+0x20*(n)))

#endif /* __HEADERGEN__ATJ213X__DMAC__H__ */
