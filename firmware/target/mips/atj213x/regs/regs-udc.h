/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 3.0.0
 * atj213x version: 1.1
 * atj213x authors: Marcin Bukat
 *
 * Copyright (C) 2015 by the authors
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN_REGS_UDC_H__
#define __HEADERGEN_REGS_UDC_H__

#define UDC_OUT0BC              (*(volatile uint8_t *)UDC_OUT0BC_ADDR)
#define UDC_OUT0BC_ADDR         (0xb00e0000 + 0x0)
#define BP_UDC_OUT0BC_BC        0
#define BM_UDC_OUT0BC_BC        0xff
#define BF_UDC_OUT0BC_BC(v)     (((v) & 0xff) << 0)
#define BFM_UDC_OUT0BC_BC(v)    BM_UDC_OUT0BC_BC
#define BF_UDC_OUT0BC_BC_V(e)   BF_UDC_OUT0BC_BC(BV_UDC_OUT0BC_BC__##e)
#define BFM_UDC_OUT0BC_BC_V(v)  BM_UDC_OUT0BC_BC

#define UDC_IN0BC               (*(volatile uint8_t *)UDC_IN0BC_ADDR)
#define UDC_IN0BC_ADDR          (0xb00e0000 + 0x1)
#define BP_UDC_IN0BC_BC         0
#define BM_UDC_IN0BC_BC         0xff
#define BF_UDC_IN0BC_BC(v)      (((v) & 0xff) << 0)
#define BFM_UDC_IN0BC_BC(v)     BM_UDC_IN0BC_BC
#define BF_UDC_IN0BC_BC_V(e)    BF_UDC_IN0BC_BC(BV_UDC_IN0BC_BC__##e)
#define BFM_UDC_IN0BC_BC_V(v)   BM_UDC_IN0BC_BC

#define UDC_EP0CS                       (*(volatile uint8_t *)UDC_EP0CS_ADDR)
#define UDC_EP0CS_ADDR                  (0xb00e0000 + 0x2)
#define BP_UDC_EP0CS_RESERVED7_4        4
#define BM_UDC_EP0CS_RESERVED7_4        0xf0
#define BF_UDC_EP0CS_RESERVED7_4(v)     (((v) & 0xf) << 4)
#define BFM_UDC_EP0CS_RESERVED7_4(v)    BM_UDC_EP0CS_RESERVED7_4
#define BF_UDC_EP0CS_RESERVED7_4_V(e)   BF_UDC_EP0CS_RESERVED7_4(BV_UDC_EP0CS_RESERVED7_4__##e)
#define BFM_UDC_EP0CS_RESERVED7_4_V(v)  BM_UDC_EP0CS_RESERVED7_4
#define BP_UDC_EP0CS_OUT_BUSY           3
#define BM_UDC_EP0CS_OUT_BUSY           0x8
#define BF_UDC_EP0CS_OUT_BUSY(v)        (((v) & 0x1) << 3)
#define BFM_UDC_EP0CS_OUT_BUSY(v)       BM_UDC_EP0CS_OUT_BUSY
#define BF_UDC_EP0CS_OUT_BUSY_V(e)      BF_UDC_EP0CS_OUT_BUSY(BV_UDC_EP0CS_OUT_BUSY__##e)
#define BFM_UDC_EP0CS_OUT_BUSY_V(v)     BM_UDC_EP0CS_OUT_BUSY
#define BP_UDC_EP0CS_IN_BUSY            2
#define BM_UDC_EP0CS_IN_BUSY            0x4
#define BF_UDC_EP0CS_IN_BUSY(v)         (((v) & 0x1) << 2)
#define BFM_UDC_EP0CS_IN_BUSY(v)        BM_UDC_EP0CS_IN_BUSY
#define BF_UDC_EP0CS_IN_BUSY_V(e)       BF_UDC_EP0CS_IN_BUSY(BV_UDC_EP0CS_IN_BUSY__##e)
#define BFM_UDC_EP0CS_IN_BUSY_V(v)      BM_UDC_EP0CS_IN_BUSY
#define BP_UDC_EP0CS_NAK                1
#define BM_UDC_EP0CS_NAK                0x2
#define BF_UDC_EP0CS_NAK(v)             (((v) & 0x1) << 1)
#define BFM_UDC_EP0CS_NAK(v)            BM_UDC_EP0CS_NAK
#define BF_UDC_EP0CS_NAK_V(e)           BF_UDC_EP0CS_NAK(BV_UDC_EP0CS_NAK__##e)
#define BFM_UDC_EP0CS_NAK_V(v)          BM_UDC_EP0CS_NAK
#define BP_UDC_EP0CS_STALL              0
#define BM_UDC_EP0CS_STALL              0x1
#define BF_UDC_EP0CS_STALL(v)           (((v) & 0x1) << 0)
#define BFM_UDC_EP0CS_STALL(v)          BM_UDC_EP0CS_STALL
#define BF_UDC_EP0CS_STALL_V(e)         BF_UDC_EP0CS_STALL(BV_UDC_EP0CS_STALL__##e)
#define BFM_UDC_EP0CS_STALL_V(v)        BM_UDC_EP0CS_STALL

#define UDC_OUT1BCL         (*(volatile uint8_t *)UDC_OUT1BCL_ADDR)
#define UDC_OUT1BCL_ADDR    (0xb00e0000 + 0x8)

#define UDC_IN1BCL      (*(volatile uint8_t *)UDC_IN1BCL_ADDR)
#define UDC_IN1BCL_ADDR (0xb00e0000 + 0xc)

#define UDC_OUT2BCL         (*(volatile uint8_t *)UDC_OUT2BCL_ADDR)
#define UDC_OUT2BCL_ADDR    (0xb00e0000 + 0x10)

#define UDC_IN2BCL      (*(volatile uint8_t *)UDC_IN2BCL_ADDR)
#define UDC_IN2BCL_ADDR (0xb00e0000 + 0x14)

#define UDC_OUT1BCH         (*(volatile uint32_t *)UDC_OUT1BCH_ADDR)
#define UDC_OUT1BCH_ADDR    (0xb00e0000 + 0x9)

#define UDC_IN1BCH      (*(volatile uint32_t *)UDC_IN1BCH_ADDR)
#define UDC_IN1BCH_ADDR (0xb00e0000 + 0xd)

#define UDC_OUT2BCH         (*(volatile uint32_t *)UDC_OUT2BCH_ADDR)
#define UDC_OUT2BCH_ADDR    (0xb00e0000 + 0x11)

#define UDC_IN2BCH      (*(volatile uint32_t *)UDC_IN2BCH_ADDR)
#define UDC_IN2BCH_ADDR (0xb00e0000 + 0x15)

#define UDC_OUT1CON                         (*(volatile uint8_t *)UDC_OUT1CON_ADDR)
#define UDC_OUT1CON_ADDR                    (0xb00e0000 + 0xa)
#define BP_UDC_OUT1CON_EP_ENABLE            7
#define BM_UDC_OUT1CON_EP_ENABLE            0x80
#define BF_UDC_OUT1CON_EP_ENABLE(v)         (((v) & 0x1) << 7)
#define BFM_UDC_OUT1CON_EP_ENABLE(v)        BM_UDC_OUT1CON_EP_ENABLE
#define BF_UDC_OUT1CON_EP_ENABLE_V(e)       BF_UDC_OUT1CON_EP_ENABLE(BV_UDC_OUT1CON_EP_ENABLE__##e)
#define BFM_UDC_OUT1CON_EP_ENABLE_V(v)      BM_UDC_OUT1CON_EP_ENABLE
#define BP_UDC_OUT1CON_STALL                6
#define BM_UDC_OUT1CON_STALL                0x40
#define BF_UDC_OUT1CON_STALL(v)             (((v) & 0x1) << 6)
#define BFM_UDC_OUT1CON_STALL(v)            BM_UDC_OUT1CON_STALL
#define BF_UDC_OUT1CON_STALL_V(e)           BF_UDC_OUT1CON_STALL(BV_UDC_OUT1CON_STALL__##e)
#define BFM_UDC_OUT1CON_STALL_V(v)          BM_UDC_OUT1CON_STALL
#define BP_UDC_OUT1CON_EP_TYPE              2
#define BM_UDC_OUT1CON_EP_TYPE              0xc
#define BV_UDC_OUT1CON_EP_TYPE__RESERVED    0x0
#define BV_UDC_OUT1CON_EP_TYPE__ISOCHRONOUS 0x1
#define BV_UDC_OUT1CON_EP_TYPE__BULK        0x2
#define BV_UDC_OUT1CON_EP_TYPE__INTERRUPT   0x3
#define BF_UDC_OUT1CON_EP_TYPE(v)           (((v) & 0x3) << 2)
#define BFM_UDC_OUT1CON_EP_TYPE(v)          BM_UDC_OUT1CON_EP_TYPE
#define BF_UDC_OUT1CON_EP_TYPE_V(e)         BF_UDC_OUT1CON_EP_TYPE(BV_UDC_OUT1CON_EP_TYPE__##e)
#define BFM_UDC_OUT1CON_EP_TYPE_V(v)        BM_UDC_OUT1CON_EP_TYPE
#define BP_UDC_OUT1CON_SUBFIFOS             0
#define BM_UDC_OUT1CON_SUBFIFOS             0x3
#define BV_UDC_OUT1CON_SUBFIFOS__SINGLE     0x0
#define BV_UDC_OUT1CON_SUBFIFOS__DOUBLE     0x1
#define BV_UDC_OUT1CON_SUBFIFOS__TRIPLE     0x2
#define BV_UDC_OUT1CON_SUBFIFOS__QUAD       0x3
#define BF_UDC_OUT1CON_SUBFIFOS(v)          (((v) & 0x3) << 0)
#define BFM_UDC_OUT1CON_SUBFIFOS(v)         BM_UDC_OUT1CON_SUBFIFOS
#define BF_UDC_OUT1CON_SUBFIFOS_V(e)        BF_UDC_OUT1CON_SUBFIFOS(BV_UDC_OUT1CON_SUBFIFOS__##e)
#define BFM_UDC_OUT1CON_SUBFIFOS_V(v)       BM_UDC_OUT1CON_SUBFIFOS

#define UDC_IN1CON                          (*(volatile uint8_t *)UDC_IN1CON_ADDR)
#define UDC_IN1CON_ADDR                     (0xb00e0000 + 0xe)
#define BP_UDC_IN1CON_EP_ENABLE             7
#define BM_UDC_IN1CON_EP_ENABLE             0x80
#define BF_UDC_IN1CON_EP_ENABLE(v)          (((v) & 0x1) << 7)
#define BFM_UDC_IN1CON_EP_ENABLE(v)         BM_UDC_IN1CON_EP_ENABLE
#define BF_UDC_IN1CON_EP_ENABLE_V(e)        BF_UDC_IN1CON_EP_ENABLE(BV_UDC_IN1CON_EP_ENABLE__##e)
#define BFM_UDC_IN1CON_EP_ENABLE_V(v)       BM_UDC_IN1CON_EP_ENABLE
#define BP_UDC_IN1CON_STALL                 6
#define BM_UDC_IN1CON_STALL                 0x40
#define BF_UDC_IN1CON_STALL(v)              (((v) & 0x1) << 6)
#define BFM_UDC_IN1CON_STALL(v)             BM_UDC_IN1CON_STALL
#define BF_UDC_IN1CON_STALL_V(e)            BF_UDC_IN1CON_STALL(BV_UDC_IN1CON_STALL__##e)
#define BFM_UDC_IN1CON_STALL_V(v)           BM_UDC_IN1CON_STALL
#define BP_UDC_IN1CON_EP_TYPE               2
#define BM_UDC_IN1CON_EP_TYPE               0xc
#define BV_UDC_IN1CON_EP_TYPE__RESERVED     0x0
#define BV_UDC_IN1CON_EP_TYPE__ISOCHRONOUS  0x1
#define BV_UDC_IN1CON_EP_TYPE__BULK         0x2
#define BV_UDC_IN1CON_EP_TYPE__INTERRUPT    0x3
#define BF_UDC_IN1CON_EP_TYPE(v)            (((v) & 0x3) << 2)
#define BFM_UDC_IN1CON_EP_TYPE(v)           BM_UDC_IN1CON_EP_TYPE
#define BF_UDC_IN1CON_EP_TYPE_V(e)          BF_UDC_IN1CON_EP_TYPE(BV_UDC_IN1CON_EP_TYPE__##e)
#define BFM_UDC_IN1CON_EP_TYPE_V(v)         BM_UDC_IN1CON_EP_TYPE
#define BP_UDC_IN1CON_SUBFIFOS              0
#define BM_UDC_IN1CON_SUBFIFOS              0x3
#define BV_UDC_IN1CON_SUBFIFOS__SINGLE      0x0
#define BV_UDC_IN1CON_SUBFIFOS__DOUBLE      0x1
#define BV_UDC_IN1CON_SUBFIFOS__TRIPLE      0x2
#define BV_UDC_IN1CON_SUBFIFOS__QUAD        0x3
#define BF_UDC_IN1CON_SUBFIFOS(v)           (((v) & 0x3) << 0)
#define BFM_UDC_IN1CON_SUBFIFOS(v)          BM_UDC_IN1CON_SUBFIFOS
#define BF_UDC_IN1CON_SUBFIFOS_V(e)         BF_UDC_IN1CON_SUBFIFOS(BV_UDC_IN1CON_SUBFIFOS__##e)
#define BFM_UDC_IN1CON_SUBFIFOS_V(v)        BM_UDC_IN1CON_SUBFIFOS

#define UDC_OUT2CON                         (*(volatile uint8_t *)UDC_OUT2CON_ADDR)
#define UDC_OUT2CON_ADDR                    (0xb00e0000 + 0x12)
#define BP_UDC_OUT2CON_EP_ENABLE            7
#define BM_UDC_OUT2CON_EP_ENABLE            0x80
#define BF_UDC_OUT2CON_EP_ENABLE(v)         (((v) & 0x1) << 7)
#define BFM_UDC_OUT2CON_EP_ENABLE(v)        BM_UDC_OUT2CON_EP_ENABLE
#define BF_UDC_OUT2CON_EP_ENABLE_V(e)       BF_UDC_OUT2CON_EP_ENABLE(BV_UDC_OUT2CON_EP_ENABLE__##e)
#define BFM_UDC_OUT2CON_EP_ENABLE_V(v)      BM_UDC_OUT2CON_EP_ENABLE
#define BP_UDC_OUT2CON_STALL                6
#define BM_UDC_OUT2CON_STALL                0x40
#define BF_UDC_OUT2CON_STALL(v)             (((v) & 0x1) << 6)
#define BFM_UDC_OUT2CON_STALL(v)            BM_UDC_OUT2CON_STALL
#define BF_UDC_OUT2CON_STALL_V(e)           BF_UDC_OUT2CON_STALL(BV_UDC_OUT2CON_STALL__##e)
#define BFM_UDC_OUT2CON_STALL_V(v)          BM_UDC_OUT2CON_STALL
#define BP_UDC_OUT2CON_EP_TYPE              2
#define BM_UDC_OUT2CON_EP_TYPE              0xc
#define BV_UDC_OUT2CON_EP_TYPE__RESERVED    0x0
#define BV_UDC_OUT2CON_EP_TYPE__ISOCHRONOUS 0x1
#define BV_UDC_OUT2CON_EP_TYPE__BULK        0x2
#define BV_UDC_OUT2CON_EP_TYPE__INTERRUPT   0x3
#define BF_UDC_OUT2CON_EP_TYPE(v)           (((v) & 0x3) << 2)
#define BFM_UDC_OUT2CON_EP_TYPE(v)          BM_UDC_OUT2CON_EP_TYPE
#define BF_UDC_OUT2CON_EP_TYPE_V(e)         BF_UDC_OUT2CON_EP_TYPE(BV_UDC_OUT2CON_EP_TYPE__##e)
#define BFM_UDC_OUT2CON_EP_TYPE_V(v)        BM_UDC_OUT2CON_EP_TYPE
#define BP_UDC_OUT2CON_SUBFIFOS             0
#define BM_UDC_OUT2CON_SUBFIFOS             0x3
#define BV_UDC_OUT2CON_SUBFIFOS__SINGLE     0x0
#define BV_UDC_OUT2CON_SUBFIFOS__DOUBLE     0x1
#define BV_UDC_OUT2CON_SUBFIFOS__TRIPLE     0x2
#define BV_UDC_OUT2CON_SUBFIFOS__QUAD       0x3
#define BF_UDC_OUT2CON_SUBFIFOS(v)          (((v) & 0x3) << 0)
#define BFM_UDC_OUT2CON_SUBFIFOS(v)         BM_UDC_OUT2CON_SUBFIFOS
#define BF_UDC_OUT2CON_SUBFIFOS_V(e)        BF_UDC_OUT2CON_SUBFIFOS(BV_UDC_OUT2CON_SUBFIFOS__##e)
#define BFM_UDC_OUT2CON_SUBFIFOS_V(v)       BM_UDC_OUT2CON_SUBFIFOS

#define UDC_IN2CON                          (*(volatile uint8_t *)UDC_IN2CON_ADDR)
#define UDC_IN2CON_ADDR                     (0xb00e0000 + 0x16)
#define BP_UDC_IN2CON_EP_ENABLE             7
#define BM_UDC_IN2CON_EP_ENABLE             0x80
#define BF_UDC_IN2CON_EP_ENABLE(v)          (((v) & 0x1) << 7)
#define BFM_UDC_IN2CON_EP_ENABLE(v)         BM_UDC_IN2CON_EP_ENABLE
#define BF_UDC_IN2CON_EP_ENABLE_V(e)        BF_UDC_IN2CON_EP_ENABLE(BV_UDC_IN2CON_EP_ENABLE__##e)
#define BFM_UDC_IN2CON_EP_ENABLE_V(v)       BM_UDC_IN2CON_EP_ENABLE
#define BP_UDC_IN2CON_STALL                 6
#define BM_UDC_IN2CON_STALL                 0x40
#define BF_UDC_IN2CON_STALL(v)              (((v) & 0x1) << 6)
#define BFM_UDC_IN2CON_STALL(v)             BM_UDC_IN2CON_STALL
#define BF_UDC_IN2CON_STALL_V(e)            BF_UDC_IN2CON_STALL(BV_UDC_IN2CON_STALL__##e)
#define BFM_UDC_IN2CON_STALL_V(v)           BM_UDC_IN2CON_STALL
#define BP_UDC_IN2CON_EP_TYPE               2
#define BM_UDC_IN2CON_EP_TYPE               0xc
#define BV_UDC_IN2CON_EP_TYPE__RESERVED     0x0
#define BV_UDC_IN2CON_EP_TYPE__ISOCHRONOUS  0x1
#define BV_UDC_IN2CON_EP_TYPE__BULK         0x2
#define BV_UDC_IN2CON_EP_TYPE__INTERRUPT    0x3
#define BF_UDC_IN2CON_EP_TYPE(v)            (((v) & 0x3) << 2)
#define BFM_UDC_IN2CON_EP_TYPE(v)           BM_UDC_IN2CON_EP_TYPE
#define BF_UDC_IN2CON_EP_TYPE_V(e)          BF_UDC_IN2CON_EP_TYPE(BV_UDC_IN2CON_EP_TYPE__##e)
#define BFM_UDC_IN2CON_EP_TYPE_V(v)         BM_UDC_IN2CON_EP_TYPE
#define BP_UDC_IN2CON_SUBFIFOS              0
#define BM_UDC_IN2CON_SUBFIFOS              0x3
#define BV_UDC_IN2CON_SUBFIFOS__SINGLE      0x0
#define BV_UDC_IN2CON_SUBFIFOS__DOUBLE      0x1
#define BV_UDC_IN2CON_SUBFIFOS__TRIPLE      0x2
#define BV_UDC_IN2CON_SUBFIFOS__QUAD        0x3
#define BF_UDC_IN2CON_SUBFIFOS(v)           (((v) & 0x3) << 0)
#define BFM_UDC_IN2CON_SUBFIFOS(v)          BM_UDC_IN2CON_SUBFIFOS
#define BF_UDC_IN2CON_SUBFIFOS_V(e)         BF_UDC_IN2CON_SUBFIFOS(BV_UDC_IN2CON_SUBFIFOS__##e)
#define BFM_UDC_IN2CON_SUBFIFOS_V(v)        BM_UDC_IN2CON_SUBFIFOS

#define UDC_OUT1CS                  (*(volatile uint8_t *)UDC_OUT1CS_ADDR)
#define UDC_OUT1CS_ADDR             (0xb00e0000 + 0xb)
#define BP_UDC_OUT1CS_AUTO          4
#define BM_UDC_OUT1CS_AUTO          0x10
#define BF_UDC_OUT1CS_AUTO(v)       (((v) & 0x1) << 4)
#define BFM_UDC_OUT1CS_AUTO(v)      BM_UDC_OUT1CS_AUTO
#define BF_UDC_OUT1CS_AUTO_V(e)     BF_UDC_OUT1CS_AUTO(BV_UDC_OUT1CS_AUTO__##e)
#define BFM_UDC_OUT1CS_AUTO_V(v)    BM_UDC_OUT1CS_AUTO
#define BP_UDC_OUT1CS_NPACK1        3
#define BM_UDC_OUT1CS_NPACK1        0x8
#define BF_UDC_OUT1CS_NPACK1(v)     (((v) & 0x1) << 3)
#define BFM_UDC_OUT1CS_NPACK1(v)    BM_UDC_OUT1CS_NPACK1
#define BF_UDC_OUT1CS_NPACK1_V(e)   BF_UDC_OUT1CS_NPACK1(BV_UDC_OUT1CS_NPACK1__##e)
#define BFM_UDC_OUT1CS_NPACK1_V(v)  BM_UDC_OUT1CS_NPACK1
#define BP_UDC_OUT1CS_NPACK0        2
#define BM_UDC_OUT1CS_NPACK0        0x4
#define BF_UDC_OUT1CS_NPACK0(v)     (((v) & 0x1) << 2)
#define BFM_UDC_OUT1CS_NPACK0(v)    BM_UDC_OUT1CS_NPACK0
#define BF_UDC_OUT1CS_NPACK0_V(e)   BF_UDC_OUT1CS_NPACK0(BV_UDC_OUT1CS_NPACK0__##e)
#define BFM_UDC_OUT1CS_NPACK0_V(v)  BM_UDC_OUT1CS_NPACK0
#define BP_UDC_OUT1CS_BUSY          1
#define BM_UDC_OUT1CS_BUSY          0x2
#define BF_UDC_OUT1CS_BUSY(v)       (((v) & 0x1) << 1)
#define BFM_UDC_OUT1CS_BUSY(v)      BM_UDC_OUT1CS_BUSY
#define BF_UDC_OUT1CS_BUSY_V(e)     BF_UDC_OUT1CS_BUSY(BV_UDC_OUT1CS_BUSY__##e)
#define BFM_UDC_OUT1CS_BUSY_V(v)    BM_UDC_OUT1CS_BUSY
#define BP_UDC_OUT1CS_ERROR         0
#define BM_UDC_OUT1CS_ERROR         0x1
#define BF_UDC_OUT1CS_ERROR(v)      (((v) & 0x1) << 0)
#define BFM_UDC_OUT1CS_ERROR(v)     BM_UDC_OUT1CS_ERROR
#define BF_UDC_OUT1CS_ERROR_V(e)    BF_UDC_OUT1CS_ERROR(BV_UDC_OUT1CS_ERROR__##e)
#define BFM_UDC_OUT1CS_ERROR_V(v)   BM_UDC_OUT1CS_ERROR

#define UDC_IN1CS                   (*(volatile uint8_t *)UDC_IN1CS_ADDR)
#define UDC_IN1CS_ADDR              (0xb00e0000 + 0xf)
#define BP_UDC_IN1CS_AUTO           4
#define BM_UDC_IN1CS_AUTO           0x10
#define BF_UDC_IN1CS_AUTO(v)        (((v) & 0x1) << 4)
#define BFM_UDC_IN1CS_AUTO(v)       BM_UDC_IN1CS_AUTO
#define BF_UDC_IN1CS_AUTO_V(e)      BF_UDC_IN1CS_AUTO(BV_UDC_IN1CS_AUTO__##e)
#define BFM_UDC_IN1CS_AUTO_V(v)     BM_UDC_IN1CS_AUTO
#define BP_UDC_IN1CS_NPACK1         3
#define BM_UDC_IN1CS_NPACK1         0x8
#define BF_UDC_IN1CS_NPACK1(v)      (((v) & 0x1) << 3)
#define BFM_UDC_IN1CS_NPACK1(v)     BM_UDC_IN1CS_NPACK1
#define BF_UDC_IN1CS_NPACK1_V(e)    BF_UDC_IN1CS_NPACK1(BV_UDC_IN1CS_NPACK1__##e)
#define BFM_UDC_IN1CS_NPACK1_V(v)   BM_UDC_IN1CS_NPACK1
#define BP_UDC_IN1CS_NPACK0         2
#define BM_UDC_IN1CS_NPACK0         0x4
#define BF_UDC_IN1CS_NPACK0(v)      (((v) & 0x1) << 2)
#define BFM_UDC_IN1CS_NPACK0(v)     BM_UDC_IN1CS_NPACK0
#define BF_UDC_IN1CS_NPACK0_V(e)    BF_UDC_IN1CS_NPACK0(BV_UDC_IN1CS_NPACK0__##e)
#define BFM_UDC_IN1CS_NPACK0_V(v)   BM_UDC_IN1CS_NPACK0
#define BP_UDC_IN1CS_BUSY           1
#define BM_UDC_IN1CS_BUSY           0x2
#define BF_UDC_IN1CS_BUSY(v)        (((v) & 0x1) << 1)
#define BFM_UDC_IN1CS_BUSY(v)       BM_UDC_IN1CS_BUSY
#define BF_UDC_IN1CS_BUSY_V(e)      BF_UDC_IN1CS_BUSY(BV_UDC_IN1CS_BUSY__##e)
#define BFM_UDC_IN1CS_BUSY_V(v)     BM_UDC_IN1CS_BUSY
#define BP_UDC_IN1CS_ERROR          0
#define BM_UDC_IN1CS_ERROR          0x1
#define BF_UDC_IN1CS_ERROR(v)       (((v) & 0x1) << 0)
#define BFM_UDC_IN1CS_ERROR(v)      BM_UDC_IN1CS_ERROR
#define BF_UDC_IN1CS_ERROR_V(e)     BF_UDC_IN1CS_ERROR(BV_UDC_IN1CS_ERROR__##e)
#define BFM_UDC_IN1CS_ERROR_V(v)    BM_UDC_IN1CS_ERROR

#define UDC_OUT2CS                  (*(volatile uint8_t *)UDC_OUT2CS_ADDR)
#define UDC_OUT2CS_ADDR             (0xb00e0000 + 0x13)
#define BP_UDC_OUT2CS_AUTO          4
#define BM_UDC_OUT2CS_AUTO          0x10
#define BF_UDC_OUT2CS_AUTO(v)       (((v) & 0x1) << 4)
#define BFM_UDC_OUT2CS_AUTO(v)      BM_UDC_OUT2CS_AUTO
#define BF_UDC_OUT2CS_AUTO_V(e)     BF_UDC_OUT2CS_AUTO(BV_UDC_OUT2CS_AUTO__##e)
#define BFM_UDC_OUT2CS_AUTO_V(v)    BM_UDC_OUT2CS_AUTO
#define BP_UDC_OUT2CS_NPACK1        3
#define BM_UDC_OUT2CS_NPACK1        0x8
#define BF_UDC_OUT2CS_NPACK1(v)     (((v) & 0x1) << 3)
#define BFM_UDC_OUT2CS_NPACK1(v)    BM_UDC_OUT2CS_NPACK1
#define BF_UDC_OUT2CS_NPACK1_V(e)   BF_UDC_OUT2CS_NPACK1(BV_UDC_OUT2CS_NPACK1__##e)
#define BFM_UDC_OUT2CS_NPACK1_V(v)  BM_UDC_OUT2CS_NPACK1
#define BP_UDC_OUT2CS_NPACK0        2
#define BM_UDC_OUT2CS_NPACK0        0x4
#define BF_UDC_OUT2CS_NPACK0(v)     (((v) & 0x1) << 2)
#define BFM_UDC_OUT2CS_NPACK0(v)    BM_UDC_OUT2CS_NPACK0
#define BF_UDC_OUT2CS_NPACK0_V(e)   BF_UDC_OUT2CS_NPACK0(BV_UDC_OUT2CS_NPACK0__##e)
#define BFM_UDC_OUT2CS_NPACK0_V(v)  BM_UDC_OUT2CS_NPACK0
#define BP_UDC_OUT2CS_BUSY          1
#define BM_UDC_OUT2CS_BUSY          0x2
#define BF_UDC_OUT2CS_BUSY(v)       (((v) & 0x1) << 1)
#define BFM_UDC_OUT2CS_BUSY(v)      BM_UDC_OUT2CS_BUSY
#define BF_UDC_OUT2CS_BUSY_V(e)     BF_UDC_OUT2CS_BUSY(BV_UDC_OUT2CS_BUSY__##e)
#define BFM_UDC_OUT2CS_BUSY_V(v)    BM_UDC_OUT2CS_BUSY
#define BP_UDC_OUT2CS_ERROR         0
#define BM_UDC_OUT2CS_ERROR         0x1
#define BF_UDC_OUT2CS_ERROR(v)      (((v) & 0x1) << 0)
#define BFM_UDC_OUT2CS_ERROR(v)     BM_UDC_OUT2CS_ERROR
#define BF_UDC_OUT2CS_ERROR_V(e)    BF_UDC_OUT2CS_ERROR(BV_UDC_OUT2CS_ERROR__##e)
#define BFM_UDC_OUT2CS_ERROR_V(v)   BM_UDC_OUT2CS_ERROR

#define UDC_IN2CS                   (*(volatile uint8_t *)UDC_IN2CS_ADDR)
#define UDC_IN2CS_ADDR              (0xb00e0000 + 0x17)
#define BP_UDC_IN2CS_AUTO           4
#define BM_UDC_IN2CS_AUTO           0x10
#define BF_UDC_IN2CS_AUTO(v)        (((v) & 0x1) << 4)
#define BFM_UDC_IN2CS_AUTO(v)       BM_UDC_IN2CS_AUTO
#define BF_UDC_IN2CS_AUTO_V(e)      BF_UDC_IN2CS_AUTO(BV_UDC_IN2CS_AUTO__##e)
#define BFM_UDC_IN2CS_AUTO_V(v)     BM_UDC_IN2CS_AUTO
#define BP_UDC_IN2CS_NPACK1         3
#define BM_UDC_IN2CS_NPACK1         0x8
#define BF_UDC_IN2CS_NPACK1(v)      (((v) & 0x1) << 3)
#define BFM_UDC_IN2CS_NPACK1(v)     BM_UDC_IN2CS_NPACK1
#define BF_UDC_IN2CS_NPACK1_V(e)    BF_UDC_IN2CS_NPACK1(BV_UDC_IN2CS_NPACK1__##e)
#define BFM_UDC_IN2CS_NPACK1_V(v)   BM_UDC_IN2CS_NPACK1
#define BP_UDC_IN2CS_NPACK0         2
#define BM_UDC_IN2CS_NPACK0         0x4
#define BF_UDC_IN2CS_NPACK0(v)      (((v) & 0x1) << 2)
#define BFM_UDC_IN2CS_NPACK0(v)     BM_UDC_IN2CS_NPACK0
#define BF_UDC_IN2CS_NPACK0_V(e)    BF_UDC_IN2CS_NPACK0(BV_UDC_IN2CS_NPACK0__##e)
#define BFM_UDC_IN2CS_NPACK0_V(v)   BM_UDC_IN2CS_NPACK0
#define BP_UDC_IN2CS_BUSY           1
#define BM_UDC_IN2CS_BUSY           0x2
#define BF_UDC_IN2CS_BUSY(v)        (((v) & 0x1) << 1)
#define BFM_UDC_IN2CS_BUSY(v)       BM_UDC_IN2CS_BUSY
#define BF_UDC_IN2CS_BUSY_V(e)      BF_UDC_IN2CS_BUSY(BV_UDC_IN2CS_BUSY__##e)
#define BFM_UDC_IN2CS_BUSY_V(v)     BM_UDC_IN2CS_BUSY
#define BP_UDC_IN2CS_ERROR          0
#define BM_UDC_IN2CS_ERROR          0x1
#define BF_UDC_IN2CS_ERROR(v)       (((v) & 0x1) << 0)
#define BFM_UDC_IN2CS_ERROR(v)      BM_UDC_IN2CS_ERROR
#define BF_UDC_IN2CS_ERROR_V(e)     BF_UDC_IN2CS_ERROR(BV_UDC_IN2CS_ERROR__##e)
#define BFM_UDC_IN2CS_ERROR_V(v)    BM_UDC_IN2CS_ERROR

#define UDC_FIFO1DAT        (*(volatile uint32_t *)UDC_FIFO1DAT_ADDR)
#define UDC_FIFO1DAT_ADDR   (0xb00e0000 + 0x84)

#define UDC_FIFO2DAT        (*(volatile uint32_t *)UDC_FIFO2DAT_ADDR)
#define UDC_FIFO2DAT_ADDR   (0xb00e0000 + 0x88)

#define UDC_EP0INDAT        (*(volatile uint32_t *)UDC_EP0INDAT_ADDR)
#define UDC_EP0INDAT_ADDR   (0xb00e0000 + 0x100)

#define UDC_EP0OUTDAT       (*(volatile uint32_t *)UDC_EP0OUTDAT_ADDR)
#define UDC_EP0OUTDAT_ADDR  (0xb00e0000 + 0x140)

#define UDC_SETUPDAT        (*(volatile uint32_t *)UDC_SETUPDAT_ADDR)
#define UDC_SETUPDAT_ADDR   (0xb00e0000 + 0x180)

#define UDC_IN04IRQ                 (*(volatile uint8_t *)UDC_IN04IRQ_ADDR)
#define UDC_IN04IRQ_ADDR            (0xb00e0000 + 0x188)
#define BP_UDC_IN04IRQ_EP_NUM       0
#define BM_UDC_IN04IRQ_EP_NUM       0x7
#define BF_UDC_IN04IRQ_EP_NUM(v)    (((v) & 0x7) << 0)
#define BFM_UDC_IN04IRQ_EP_NUM(v)   BM_UDC_IN04IRQ_EP_NUM
#define BF_UDC_IN04IRQ_EP_NUM_V(e)  BF_UDC_IN04IRQ_EP_NUM(BV_UDC_IN04IRQ_EP_NUM__##e)
#define BFM_UDC_IN04IRQ_EP_NUM_V(v) BM_UDC_IN04IRQ_EP_NUM

#define UDC_OUT04IRQ                    (*(volatile uint8_t *)UDC_OUT04IRQ_ADDR)
#define UDC_OUT04IRQ_ADDR               (0xb00e0000 + 0x18a)
#define BP_UDC_OUT04IRQ_EP_NUM          0
#define BM_UDC_OUT04IRQ_EP_NUM          0x7
#define BF_UDC_OUT04IRQ_EP_NUM(v)       (((v) & 0x7) << 0)
#define BFM_UDC_OUT04IRQ_EP_NUM(v)      BM_UDC_OUT04IRQ_EP_NUM
#define BF_UDC_OUT04IRQ_EP_NUM_V(e)     BF_UDC_OUT04IRQ_EP_NUM(BV_UDC_OUT04IRQ_EP_NUM__##e)
#define BFM_UDC_OUT04IRQ_EP_NUM_V(v)    BM_UDC_OUT04IRQ_EP_NUM

#define UDC_USBIRQ                      (*(volatile uint8_t *)UDC_USBIRQ_ADDR)
#define UDC_USBIRQ_ADDR                 (0xb00e0000 + 0x18c)
#define BP_UDC_USBIRQ_HS                5
#define BM_UDC_USBIRQ_HS                0x20
#define BF_UDC_USBIRQ_HS(v)             (((v) & 0x1) << 5)
#define BFM_UDC_USBIRQ_HS(v)            BM_UDC_USBIRQ_HS
#define BF_UDC_USBIRQ_HS_V(e)           BF_UDC_USBIRQ_HS(BV_UDC_USBIRQ_HS__##e)
#define BFM_UDC_USBIRQ_HS_V(v)          BM_UDC_USBIRQ_HS
#define BP_UDC_USBIRQ_RESET             4
#define BM_UDC_USBIRQ_RESET             0x10
#define BF_UDC_USBIRQ_RESET(v)          (((v) & 0x1) << 4)
#define BFM_UDC_USBIRQ_RESET(v)         BM_UDC_USBIRQ_RESET
#define BF_UDC_USBIRQ_RESET_V(e)        BF_UDC_USBIRQ_RESET(BV_UDC_USBIRQ_RESET__##e)
#define BFM_UDC_USBIRQ_RESET_V(v)       BM_UDC_USBIRQ_RESET
#define BP_UDC_USBIRQ_SUSPEND           3
#define BM_UDC_USBIRQ_SUSPEND           0x8
#define BF_UDC_USBIRQ_SUSPEND(v)        (((v) & 0x1) << 3)
#define BFM_UDC_USBIRQ_SUSPEND(v)       BM_UDC_USBIRQ_SUSPEND
#define BF_UDC_USBIRQ_SUSPEND_V(e)      BF_UDC_USBIRQ_SUSPEND(BV_UDC_USBIRQ_SUSPEND__##e)
#define BFM_UDC_USBIRQ_SUSPEND_V(v)     BM_UDC_USBIRQ_SUSPEND
#define BP_UDC_USBIRQ_SETUP_TOKEN       2
#define BM_UDC_USBIRQ_SETUP_TOKEN       0x4
#define BF_UDC_USBIRQ_SETUP_TOKEN(v)    (((v) & 0x1) << 2)
#define BFM_UDC_USBIRQ_SETUP_TOKEN(v)   BM_UDC_USBIRQ_SETUP_TOKEN
#define BF_UDC_USBIRQ_SETUP_TOKEN_V(e)  BF_UDC_USBIRQ_SETUP_TOKEN(BV_UDC_USBIRQ_SETUP_TOKEN__##e)
#define BFM_UDC_USBIRQ_SETUP_TOKEN_V(v) BM_UDC_USBIRQ_SETUP_TOKEN
#define BP_UDC_USBIRQ_SOF               1
#define BM_UDC_USBIRQ_SOF               0x2
#define BF_UDC_USBIRQ_SOF(v)            (((v) & 0x1) << 1)
#define BFM_UDC_USBIRQ_SOF(v)           BM_UDC_USBIRQ_SOF
#define BF_UDC_USBIRQ_SOF_V(e)          BF_UDC_USBIRQ_SOF(BV_UDC_USBIRQ_SOF__##e)
#define BFM_UDC_USBIRQ_SOF_V(v)         BM_UDC_USBIRQ_SOF
#define BP_UDC_USBIRQ_SETUP_DATA        0
#define BM_UDC_USBIRQ_SETUP_DATA        0x1
#define BF_UDC_USBIRQ_SETUP_DATA(v)     (((v) & 0x1) << 0)
#define BFM_UDC_USBIRQ_SETUP_DATA(v)    BM_UDC_USBIRQ_SETUP_DATA
#define BF_UDC_USBIRQ_SETUP_DATA_V(e)   BF_UDC_USBIRQ_SETUP_DATA(BV_UDC_USBIRQ_SETUP_DATA__##e)
#define BFM_UDC_USBIRQ_SETUP_DATA_V(v)  BM_UDC_USBIRQ_SETUP_DATA

#define UDC_IN04IEN                 (*(volatile uint8_t *)UDC_IN04IEN_ADDR)
#define UDC_IN04IEN_ADDR            (0xb00e0000 + 0x194)
#define BP_UDC_IN04IEN_EP_NUM       0
#define BM_UDC_IN04IEN_EP_NUM       0x7
#define BF_UDC_IN04IEN_EP_NUM(v)    (((v) & 0x7) << 0)
#define BFM_UDC_IN04IEN_EP_NUM(v)   BM_UDC_IN04IEN_EP_NUM
#define BF_UDC_IN04IEN_EP_NUM_V(e)  BF_UDC_IN04IEN_EP_NUM(BV_UDC_IN04IEN_EP_NUM__##e)
#define BFM_UDC_IN04IEN_EP_NUM_V(v) BM_UDC_IN04IEN_EP_NUM

#define UDC_OUT04IEN                    (*(volatile uint8_t *)UDC_OUT04IEN_ADDR)
#define UDC_OUT04IEN_ADDR               (0xb00e0000 + 0x196)
#define BP_UDC_OUT04IEN_EP_NUM          0
#define BM_UDC_OUT04IEN_EP_NUM          0x7
#define BF_UDC_OUT04IEN_EP_NUM(v)       (((v) & 0x7) << 0)
#define BFM_UDC_OUT04IEN_EP_NUM(v)      BM_UDC_OUT04IEN_EP_NUM
#define BF_UDC_OUT04IEN_EP_NUM_V(e)     BF_UDC_OUT04IEN_EP_NUM(BV_UDC_OUT04IEN_EP_NUM__##e)
#define BFM_UDC_OUT04IEN_EP_NUM_V(v)    BM_UDC_OUT04IEN_EP_NUM

#define UDC_USBIEN                          (*(volatile uint8_t *)UDC_USBIEN_ADDR)
#define UDC_USBIEN_ADDR                     (0xb00e0000 + 0x198)
#define BP_UDC_USBIEN_HS                    5
#define BM_UDC_USBIEN_HS                    0x20
#define BV_UDC_USBIEN_HS__DISABLE           0x0
#define BV_UDC_USBIEN_HS__ENABLE            0x1
#define BF_UDC_USBIEN_HS(v)                 (((v) & 0x1) << 5)
#define BFM_UDC_USBIEN_HS(v)                BM_UDC_USBIEN_HS
#define BF_UDC_USBIEN_HS_V(e)               BF_UDC_USBIEN_HS(BV_UDC_USBIEN_HS__##e)
#define BFM_UDC_USBIEN_HS_V(v)              BM_UDC_USBIEN_HS
#define BP_UDC_USBIEN_RESET                 4
#define BM_UDC_USBIEN_RESET                 0x10
#define BV_UDC_USBIEN_RESET__DISABLE        0x0
#define BV_UDC_USBIEN_RESET__ENABLE         0x1
#define BF_UDC_USBIEN_RESET(v)              (((v) & 0x1) << 4)
#define BFM_UDC_USBIEN_RESET(v)             BM_UDC_USBIEN_RESET
#define BF_UDC_USBIEN_RESET_V(e)            BF_UDC_USBIEN_RESET(BV_UDC_USBIEN_RESET__##e)
#define BFM_UDC_USBIEN_RESET_V(v)           BM_UDC_USBIEN_RESET
#define BP_UDC_USBIEN_SUSPEND               3
#define BM_UDC_USBIEN_SUSPEND               0x8
#define BV_UDC_USBIEN_SUSPEND__DISABLE      0x0
#define BV_UDC_USBIEN_SUSPEND__ENABLE       0x1
#define BF_UDC_USBIEN_SUSPEND(v)            (((v) & 0x1) << 3)
#define BFM_UDC_USBIEN_SUSPEND(v)           BM_UDC_USBIEN_SUSPEND
#define BF_UDC_USBIEN_SUSPEND_V(e)          BF_UDC_USBIEN_SUSPEND(BV_UDC_USBIEN_SUSPEND__##e)
#define BFM_UDC_USBIEN_SUSPEND_V(v)         BM_UDC_USBIEN_SUSPEND
#define BP_UDC_USBIEN_SETUP_TOKEN           2
#define BM_UDC_USBIEN_SETUP_TOKEN           0x4
#define BV_UDC_USBIEN_SETUP_TOKEN__DISABLE  0x0
#define BV_UDC_USBIEN_SETUP_TOKEN__ENABLE   0x1
#define BF_UDC_USBIEN_SETUP_TOKEN(v)        (((v) & 0x1) << 2)
#define BFM_UDC_USBIEN_SETUP_TOKEN(v)       BM_UDC_USBIEN_SETUP_TOKEN
#define BF_UDC_USBIEN_SETUP_TOKEN_V(e)      BF_UDC_USBIEN_SETUP_TOKEN(BV_UDC_USBIEN_SETUP_TOKEN__##e)
#define BFM_UDC_USBIEN_SETUP_TOKEN_V(v)     BM_UDC_USBIEN_SETUP_TOKEN
#define BP_UDC_USBIEN_SOF                   1
#define BM_UDC_USBIEN_SOF                   0x2
#define BV_UDC_USBIEN_SOF__DISABLE          0x0
#define BV_UDC_USBIEN_SOF__ENABLE           0x1
#define BF_UDC_USBIEN_SOF(v)                (((v) & 0x1) << 1)
#define BFM_UDC_USBIEN_SOF(v)               BM_UDC_USBIEN_SOF
#define BF_UDC_USBIEN_SOF_V(e)              BF_UDC_USBIEN_SOF(BV_UDC_USBIEN_SOF__##e)
#define BFM_UDC_USBIEN_SOF_V(v)             BM_UDC_USBIEN_SOF
#define BP_UDC_USBIEN_SETUP_DATA            0
#define BM_UDC_USBIEN_SETUP_DATA            0x1
#define BV_UDC_USBIEN_SETUP_DATA__DISABLE   0x0
#define BV_UDC_USBIEN_SETUP_DATA__ENABLE    0x1
#define BF_UDC_USBIEN_SETUP_DATA(v)         (((v) & 0x1) << 0)
#define BFM_UDC_USBIEN_SETUP_DATA(v)        BM_UDC_USBIEN_SETUP_DATA
#define BF_UDC_USBIEN_SETUP_DATA_V(e)       BF_UDC_USBIEN_SETUP_DATA(BV_UDC_USBIEN_SETUP_DATA__##e)
#define BFM_UDC_USBIEN_SETUP_DATA_V(v)      BM_UDC_USBIEN_SETUP_DATA

#define UDC_IVECT               (*(volatile uint8_t *)UDC_IVECT_ADDR)
#define UDC_IVECT_ADDR          (0xb00e0000 + 0x1a0)
#define BP_UDC_IVECT_IRQ        0
#define BM_UDC_IVECT_IRQ        0xff
#define BV_UDC_IVECT_IRQ__RESET 0x0
#define BV_UDC_IVECT_IRQ__SETUP 0x10
#define BV_UDC_IVECT_IRQ__HS    0x14
#define BV_UDC_IVECT_IRQ__EP    0x28
#define BV_UDC_IVECT_IRQ__OTG   0xd8
#define BF_UDC_IVECT_IRQ(v)     (((v) & 0xff) << 0)
#define BFM_UDC_IVECT_IRQ(v)    BM_UDC_IVECT_IRQ
#define BF_UDC_IVECT_IRQ_V(e)   BF_UDC_IVECT_IRQ(BV_UDC_IVECT_IRQ__##e)
#define BFM_UDC_IVECT_IRQ_V(v)  BM_UDC_IVECT_IRQ

#define UDC_ENDPRST                         (*(volatile uint8_t *)UDC_ENDPRST_ADDR)
#define UDC_ENDPRST_ADDR                    (0xb00e0000 + 0x1a2)
#define BP_UDC_ENDPRST_FIFO_RESET           6
#define BM_UDC_ENDPRST_FIFO_RESET           0x40
#define BF_UDC_ENDPRST_FIFO_RESET(v)        (((v) & 0x1) << 6)
#define BFM_UDC_ENDPRST_FIFO_RESET(v)       BM_UDC_ENDPRST_FIFO_RESET
#define BF_UDC_ENDPRST_FIFO_RESET_V(e)      BF_UDC_ENDPRST_FIFO_RESET(BV_UDC_ENDPRST_FIFO_RESET__##e)
#define BFM_UDC_ENDPRST_FIFO_RESET_V(v)     BM_UDC_ENDPRST_FIFO_RESET
#define BP_UDC_ENDPRST_TOGGLE_RESET         5
#define BM_UDC_ENDPRST_TOGGLE_RESET         0x20
#define BF_UDC_ENDPRST_TOGGLE_RESET(v)      (((v) & 0x1) << 5)
#define BFM_UDC_ENDPRST_TOGGLE_RESET(v)     BM_UDC_ENDPRST_TOGGLE_RESET
#define BF_UDC_ENDPRST_TOGGLE_RESET_V(e)    BF_UDC_ENDPRST_TOGGLE_RESET(BV_UDC_ENDPRST_TOGGLE_RESET__##e)
#define BFM_UDC_ENDPRST_TOGGLE_RESET_V(v)   BM_UDC_ENDPRST_TOGGLE_RESET
#define BP_UDC_ENDPRST_DIR                  4
#define BM_UDC_ENDPRST_DIR                  0x10
#define BV_UDC_ENDPRST_DIR__OUT             0x0
#define BV_UDC_ENDPRST_DIR__IN              0x1
#define BF_UDC_ENDPRST_DIR(v)               (((v) & 0x1) << 4)
#define BFM_UDC_ENDPRST_DIR(v)              BM_UDC_ENDPRST_DIR
#define BF_UDC_ENDPRST_DIR_V(e)             BF_UDC_ENDPRST_DIR(BV_UDC_ENDPRST_DIR__##e)
#define BFM_UDC_ENDPRST_DIR_V(v)            BM_UDC_ENDPRST_DIR
#define BP_UDC_ENDPRST_EP_NUM               0
#define BM_UDC_ENDPRST_EP_NUM               0x7
#define BF_UDC_ENDPRST_EP_NUM(v)            (((v) & 0x7) << 0)
#define BFM_UDC_ENDPRST_EP_NUM(v)           BM_UDC_ENDPRST_EP_NUM
#define BF_UDC_ENDPRST_EP_NUM_V(e)          BF_UDC_ENDPRST_EP_NUM(BV_UDC_ENDPRST_EP_NUM__##e)
#define BFM_UDC_ENDPRST_EP_NUM_V(v)         BM_UDC_ENDPRST_EP_NUM

#define UDC_USBCS                       (*(volatile uint8_t *)UDC_USBCS_ADDR)
#define UDC_USBCS_ADDR                  (0xb00e0000 + 0x1a3)
#define BP_UDC_USBCS_SOFT_CONNECT       6
#define BM_UDC_USBCS_SOFT_CONNECT       0x40
#define BF_UDC_USBCS_SOFT_CONNECT(v)    (((v) & 0x1) << 6)
#define BFM_UDC_USBCS_SOFT_CONNECT(v)   BM_UDC_USBCS_SOFT_CONNECT
#define BF_UDC_USBCS_SOFT_CONNECT_V(e)  BF_UDC_USBCS_SOFT_CONNECT(BV_UDC_USBCS_SOFT_CONNECT__##e)
#define BFM_UDC_USBCS_SOFT_CONNECT_V(v) BM_UDC_USBCS_SOFT_CONNECT
#define BP_UDC_USBCS_SIGRESUME          5
#define BM_UDC_USBCS_SIGRESUME          0x20
#define BF_UDC_USBCS_SIGRESUME(v)       (((v) & 0x1) << 5)
#define BFM_UDC_USBCS_SIGRESUME(v)      BM_UDC_USBCS_SIGRESUME
#define BF_UDC_USBCS_SIGRESUME_V(e)     BF_UDC_USBCS_SIGRESUME(BV_UDC_USBCS_SIGRESUME__##e)
#define BFM_UDC_USBCS_SIGRESUME_V(v)    BM_UDC_USBCS_SIGRESUME
#define BP_UDC_USBCS_USBSPEED           1
#define BM_UDC_USBCS_USBSPEED           0x2
#define BF_UDC_USBCS_USBSPEED(v)        (((v) & 0x1) << 1)
#define BFM_UDC_USBCS_USBSPEED(v)       BM_UDC_USBCS_USBSPEED
#define BF_UDC_USBCS_USBSPEED_V(e)      BF_UDC_USBCS_USBSPEED(BV_UDC_USBCS_USBSPEED__##e)
#define BFM_UDC_USBCS_USBSPEED_V(v)     BM_UDC_USBCS_USBSPEED
#define BP_UDC_USBCS_HCLSMODE           0
#define BM_UDC_USBCS_HCLSMODE           0x1
#define BF_UDC_USBCS_HCLSMODE(v)        (((v) & 0x1) << 0)
#define BFM_UDC_USBCS_HCLSMODE(v)       BM_UDC_USBCS_HCLSMODE
#define BF_UDC_USBCS_HCLSMODE_V(e)      BF_UDC_USBCS_HCLSMODE(BV_UDC_USBCS_HCLSMODE__##e)
#define BFM_UDC_USBCS_HCLSMODE_V(v)     BM_UDC_USBCS_HCLSMODE

#define UDC_FIFOCTRL                        (*(volatile uint8_t *)UDC_FIFOCTRL_ADDR)
#define UDC_FIFOCTRL_ADDR                   (0xb00e0000 + 0x1a8)
#define BP_UDC_FIFOCTRL_CPU_ACCESS          7
#define BM_UDC_FIFOCTRL_CPU_ACCESS          0x80
#define BF_UDC_FIFOCTRL_CPU_ACCESS(v)       (((v) & 0x1) << 7)
#define BFM_UDC_FIFOCTRL_CPU_ACCESS(v)      BM_UDC_FIFOCTRL_CPU_ACCESS
#define BF_UDC_FIFOCTRL_CPU_ACCESS_V(e)     BF_UDC_FIFOCTRL_CPU_ACCESS(BV_UDC_FIFOCTRL_CPU_ACCESS__##e)
#define BFM_UDC_FIFOCTRL_CPU_ACCESS_V(v)    BM_UDC_FIFOCTRL_CPU_ACCESS
#define BP_UDC_FIFOCTRL_DMA                 5
#define BM_UDC_FIFOCTRL_DMA                 0x20
#define BF_UDC_FIFOCTRL_DMA(v)              (((v) & 0x1) << 5)
#define BFM_UDC_FIFOCTRL_DMA(v)             BM_UDC_FIFOCTRL_DMA
#define BF_UDC_FIFOCTRL_DMA_V(e)            BF_UDC_FIFOCTRL_DMA(BV_UDC_FIFOCTRL_DMA__##e)
#define BFM_UDC_FIFOCTRL_DMA_V(v)           BM_UDC_FIFOCTRL_DMA
#define BP_UDC_FIFOCTRL_DIR                 4
#define BM_UDC_FIFOCTRL_DIR                 0x10
#define BV_UDC_FIFOCTRL_DIR__OUT            0x0
#define BV_UDC_FIFOCTRL_DIR__IN             0x1
#define BF_UDC_FIFOCTRL_DIR(v)              (((v) & 0x1) << 4)
#define BFM_UDC_FIFOCTRL_DIR(v)             BM_UDC_FIFOCTRL_DIR
#define BF_UDC_FIFOCTRL_DIR_V(e)            BF_UDC_FIFOCTRL_DIR(BV_UDC_FIFOCTRL_DIR__##e)
#define BFM_UDC_FIFOCTRL_DIR_V(v)           BM_UDC_FIFOCTRL_DIR
#define BP_UDC_FIFOCTRL_EP_NUM              0
#define BM_UDC_FIFOCTRL_EP_NUM              0x7
#define BF_UDC_FIFOCTRL_EP_NUM(v)           (((v) & 0x7) << 0)
#define BFM_UDC_FIFOCTRL_EP_NUM(v)          BM_UDC_FIFOCTRL_EP_NUM
#define BF_UDC_FIFOCTRL_EP_NUM_V(e)         BF_UDC_FIFOCTRL_EP_NUM(BV_UDC_FIFOCTRL_EP_NUM__##e)
#define BFM_UDC_FIFOCTRL_EP_NUM_V(v)        BM_UDC_FIFOCTRL_EP_NUM

#define UDC_OTGIRQ                      (*(volatile uint8_t *)UDC_OTGIRQ_ADDR)
#define UDC_OTGIRQ_ADDR                 (0xb00e0000 + 0x1bc)
#define BP_UDC_OTGIRQ_PERIPH            4
#define BM_UDC_OTGIRQ_PERIPH            0x10
#define BF_UDC_OTGIRQ_PERIPH(v)         (((v) & 0x1) << 4)
#define BFM_UDC_OTGIRQ_PERIPH(v)        BM_UDC_OTGIRQ_PERIPH
#define BF_UDC_OTGIRQ_PERIPH_V(e)       BF_UDC_OTGIRQ_PERIPH(BV_UDC_OTGIRQ_PERIPH__##e)
#define BFM_UDC_OTGIRQ_PERIPH_V(v)      BM_UDC_OTGIRQ_PERIPH
#define BP_UDC_OTGIRQ_VBUSERR           3
#define BM_UDC_OTGIRQ_VBUSERR           0x8
#define BF_UDC_OTGIRQ_VBUSERR(v)        (((v) & 0x1) << 3)
#define BFM_UDC_OTGIRQ_VBUSERR(v)       BM_UDC_OTGIRQ_VBUSERR
#define BF_UDC_OTGIRQ_VBUSERR_V(e)      BF_UDC_OTGIRQ_VBUSERR(BV_UDC_OTGIRQ_VBUSERR__##e)
#define BFM_UDC_OTGIRQ_VBUSERR_V(v)     BM_UDC_OTGIRQ_VBUSERR
#define BP_UDC_OTGIRQ_LOCSOFT           2
#define BM_UDC_OTGIRQ_LOCSOFT           0x4
#define BF_UDC_OTGIRQ_LOCSOFT(v)        (((v) & 0x1) << 2)
#define BFM_UDC_OTGIRQ_LOCSOFT(v)       BM_UDC_OTGIRQ_LOCSOFT
#define BF_UDC_OTGIRQ_LOCSOFT_V(e)      BF_UDC_OTGIRQ_LOCSOFT(BV_UDC_OTGIRQ_LOCSOFT__##e)
#define BFM_UDC_OTGIRQ_LOCSOFT_V(v)     BM_UDC_OTGIRQ_LOCSOFT
#define BP_UDC_OTGIRQ_SPRDET            1
#define BM_UDC_OTGIRQ_SPRDET            0x2
#define BF_UDC_OTGIRQ_SPRDET(v)         (((v) & 0x1) << 1)
#define BFM_UDC_OTGIRQ_SPRDET(v)        BM_UDC_OTGIRQ_SPRDET
#define BF_UDC_OTGIRQ_SPRDET_V(e)       BF_UDC_OTGIRQ_SPRDET(BV_UDC_OTGIRQ_SPRDET__##e)
#define BFM_UDC_OTGIRQ_SPRDET_V(v)      BM_UDC_OTGIRQ_SPRDET
#define BP_UDC_OTGIRQ_OTG_IDLE          0
#define BM_UDC_OTGIRQ_OTG_IDLE          0x1
#define BF_UDC_OTGIRQ_OTG_IDLE(v)       (((v) & 0x1) << 0)
#define BFM_UDC_OTGIRQ_OTG_IDLE(v)      BM_UDC_OTGIRQ_OTG_IDLE
#define BF_UDC_OTGIRQ_OTG_IDLE_V(e)     BF_UDC_OTGIRQ_OTG_IDLE(BV_UDC_OTGIRQ_OTG_IDLE__##e)
#define BFM_UDC_OTGIRQ_OTG_IDLE_V(v)    BM_UDC_OTGIRQ_OTG_IDLE

#define UDC_OTGSTATUS       (*(volatile uint8_t *)UDC_OTGSTATUS_ADDR)
#define UDC_OTGSTATUS_ADDR  (0xb00e0000 + 0x1bf)

#define UDC_OTGIEN      (*(volatile uint8_t *)UDC_OTGIEN_ADDR)
#define UDC_OTGIEN_ADDR (0xb00e0000 + 0x1c0)

#define UDC_HCIN1MAXPCKL        (*(volatile uint8_t *)UDC_HCIN1MAXPCKL_ADDR)
#define UDC_HCIN1MAXPCKL_ADDR   (0xb00e0000 + 0x1e2)

#define UDC_HCOUT2MAXPCKL       (*(volatile uint8_t *)UDC_HCOUT2MAXPCKL_ADDR)
#define UDC_HCOUT2MAXPCKL_ADDR  (0xb00e0000 + 0x3e4)

#define UDC_OUT1STADDR      (*(volatile uint32_t *)UDC_OUT1STADDR_ADDR)
#define UDC_OUT1STADDR_ADDR (0xb00e0000 + 0x304)

#define UDC_IN2STADDR       (*(volatile uint32_t *)UDC_IN2STADDR_ADDR)
#define UDC_IN2STADDR_ADDR  (0xb00e0000 + 0x348)

#define UDC_USBEIRQ                         (*(volatile uint8_t *)UDC_USBEIRQ_ADDR)
#define UDC_USBEIRQ_ADDR                    (0xb00e0000 + 0x400)
#define BP_UDC_USBEIRQ_USB                  7
#define BM_UDC_USBEIRQ_USB                  0x80
#define BF_UDC_USBEIRQ_USB(v)               (((v) & 0x1) << 7)
#define BFM_UDC_USBEIRQ_USB(v)              BM_UDC_USBEIRQ_USB
#define BF_UDC_USBEIRQ_USB_V(e)             BF_UDC_USBEIRQ_USB(BV_UDC_USBEIRQ_USB__##e)
#define BFM_UDC_USBEIRQ_USB_V(v)            BM_UDC_USBEIRQ_USB
#define BP_UDC_USBEIRQ_WAKEUP               6
#define BM_UDC_USBEIRQ_WAKEUP               0x40
#define BF_UDC_USBEIRQ_WAKEUP(v)            (((v) & 0x1) << 6)
#define BFM_UDC_USBEIRQ_WAKEUP(v)           BM_UDC_USBEIRQ_WAKEUP
#define BF_UDC_USBEIRQ_WAKEUP_V(e)          BF_UDC_USBEIRQ_WAKEUP(BV_UDC_USBEIRQ_WAKEUP__##e)
#define BFM_UDC_USBEIRQ_WAKEUP_V(v)         BM_UDC_USBEIRQ_WAKEUP
#define BP_UDC_USBEIRQ_RESUME               5
#define BM_UDC_USBEIRQ_RESUME               0x20
#define BF_UDC_USBEIRQ_RESUME(v)            (((v) & 0x1) << 5)
#define BFM_UDC_USBEIRQ_RESUME(v)           BM_UDC_USBEIRQ_RESUME
#define BF_UDC_USBEIRQ_RESUME_V(e)          BF_UDC_USBEIRQ_RESUME(BV_UDC_USBEIRQ_RESUME__##e)
#define BFM_UDC_USBEIRQ_RESUME_V(v)         BM_UDC_USBEIRQ_RESUME
#define BP_UDC_USBEIRQ_CONDISCON            4
#define BM_UDC_USBEIRQ_CONDISCON            0x10
#define BF_UDC_USBEIRQ_CONDISCON(v)         (((v) & 0x1) << 4)
#define BFM_UDC_USBEIRQ_CONDISCON(v)        BM_UDC_USBEIRQ_CONDISCON
#define BF_UDC_USBEIRQ_CONDISCON_V(e)       BF_UDC_USBEIRQ_CONDISCON(BV_UDC_USBEIRQ_CONDISCON__##e)
#define BFM_UDC_USBEIRQ_CONDISCON_V(v)      BM_UDC_USBEIRQ_CONDISCON
#define BP_UDC_USBEIRQ_USBIEN               3
#define BM_UDC_USBEIRQ_USBIEN               0x8
#define BF_UDC_USBEIRQ_USBIEN(v)            (((v) & 0x1) << 3)
#define BFM_UDC_USBEIRQ_USBIEN(v)           BM_UDC_USBEIRQ_USBIEN
#define BF_UDC_USBEIRQ_USBIEN_V(e)          BF_UDC_USBEIRQ_USBIEN(BV_UDC_USBEIRQ_USBIEN__##e)
#define BFM_UDC_USBEIRQ_USBIEN_V(v)         BM_UDC_USBEIRQ_USBIEN
#define BP_UDC_USBEIRQ_WAKEUPIEN            2
#define BM_UDC_USBEIRQ_WAKEUPIEN            0x4
#define BF_UDC_USBEIRQ_WAKEUPIEN(v)         (((v) & 0x1) << 2)
#define BFM_UDC_USBEIRQ_WAKEUPIEN(v)        BM_UDC_USBEIRQ_WAKEUPIEN
#define BF_UDC_USBEIRQ_WAKEUPIEN_V(e)       BF_UDC_USBEIRQ_WAKEUPIEN(BV_UDC_USBEIRQ_WAKEUPIEN__##e)
#define BFM_UDC_USBEIRQ_WAKEUPIEN_V(v)      BM_UDC_USBEIRQ_WAKEUPIEN
#define BP_UDC_USBEIRQ_RESUMEIEN            1
#define BM_UDC_USBEIRQ_RESUMEIEN            0x2
#define BF_UDC_USBEIRQ_RESUMEIEN(v)         (((v) & 0x1) << 1)
#define BFM_UDC_USBEIRQ_RESUMEIEN(v)        BM_UDC_USBEIRQ_RESUMEIEN
#define BF_UDC_USBEIRQ_RESUMEIEN_V(e)       BF_UDC_USBEIRQ_RESUMEIEN(BV_UDC_USBEIRQ_RESUMEIEN__##e)
#define BFM_UDC_USBEIRQ_RESUMEIEN_V(v)      BM_UDC_USBEIRQ_RESUMEIEN
#define BP_UDC_USBEIRQ_CONDISCONIEN         0
#define BM_UDC_USBEIRQ_CONDISCONIEN         0x1
#define BF_UDC_USBEIRQ_CONDISCONIEN(v)      (((v) & 0x1) << 0)
#define BFM_UDC_USBEIRQ_CONDISCONIEN(v)     BM_UDC_USBEIRQ_CONDISCONIEN
#define BF_UDC_USBEIRQ_CONDISCONIEN_V(e)    BF_UDC_USBEIRQ_CONDISCONIEN(BV_UDC_USBEIRQ_CONDISCONIEN__##e)
#define BFM_UDC_USBEIRQ_CONDISCONIEN_V(v)   BM_UDC_USBEIRQ_CONDISCONIEN

#define UDC_USBERST         (*(volatile uint8_t *)UDC_USBERST_ADDR)
#define UDC_USBERST_ADDR    (0xb00e0000 + 0x404)

#define UDC_DMAEPSEL                    (*(volatile uint8_t *)UDC_DMAEPSEL_ADDR)
#define UDC_DMAEPSEL_ADDR               (0xb00e0000 + 0x40c)
#define BP_UDC_DMAEPSEL_EP_SEL          0
#define BM_UDC_DMAEPSEL_EP_SEL          0xff
#define BV_UDC_DMAEPSEL_EP_SEL__UNKNOWN 0x0
#define BV_UDC_DMAEPSEL_EP_SEL__EP1_IN  0x1
#define BV_UDC_DMAEPSEL_EP_SEL__EP1_OUT 0x3
#define BV_UDC_DMAEPSEL_EP_SEL__EP2_IN  0x4
#define BV_UDC_DMAEPSEL_EP_SEL__EP2_OUT 0xc
#define BF_UDC_DMAEPSEL_EP_SEL(v)       (((v) & 0xff) << 0)
#define BFM_UDC_DMAEPSEL_EP_SEL(v)      BM_UDC_DMAEPSEL_EP_SEL
#define BF_UDC_DMAEPSEL_EP_SEL_V(e)     BF_UDC_DMAEPSEL_EP_SEL(BV_UDC_DMAEPSEL_EP_SEL__##e)
#define BFM_UDC_DMAEPSEL_EP_SEL_V(v)    BM_UDC_DMAEPSEL_EP_SEL

#endif /* __HEADERGEN_REGS_UDC_H__*/
